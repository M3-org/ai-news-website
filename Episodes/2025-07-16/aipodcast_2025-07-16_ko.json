{
  "config": {
    "id": "aipodcast",
    "name": "AI Podcast",
    "description": "A tech news broadcast about the work being done on ai16z's GitHub repo.",
    "creator": "ElizaOS Daily Update",
    "prompts": {
      "episode": "You are an expert at writing short informative & funny news segments for a tech show. Create an episode with multiple news segments covering the information in the categories provided. Include interactions between the hosts and producer. Scenes should generally contain 8-12 lines of dialogue. Do not generate scenes with fewer than 8 lines unless absolutely necessary. If you run out of content, add more banter or reactions between the hosts. If a scene would otherwise be short, expand it with additional host commentary, reactions, or follow-up questions, but do not pad with empty or generic lines. **ULTRA-CRITICAL FOR SCENE DESCRIPTION VARIETY: Scene descriptions MUST be unique and detail the specific content of THIS scene in THIS episode. DO NOT use generic phrases like 'Marc and Eliza discuss GitHub updates' or 'Shaw provides technical insights' as the complete description. For recurring topics (e.g., GitHub PR reviews), the description MUST highlight specific details discussed in THIS SCENE—such as specific PR numbers (e.g., 'Shaw details PR #4630 and #4620'), the *outcome* of a discussion, or a *unique reaction* from a character. Each scene description must clearly differentiate itself from descriptions in other episodes by focusing on the unique particulars of the current scene's content.** Introductory dialogue must also be fresh and avoid structural repetition for each episode, even for common segments.\\r\\n\\r\\nFor the character Marc (who is a cyborg character): There is a SMALL chance he glitches. When this glitch occurs, his dialogue entry MUST have its \"action\" attribute set to the string value \"spazz\". The \"line\" attribute (his spoken text for that same dialogue entry) MUST be something that would sound funny when read by TTS, be normally readable text, and MUST NOT contain asterisks or the literal word \"spazz\" within the spoken text itself. This specific glitch (i.e., Marc having \"action\": \"spazz\") should occur for Marc approximately once every 3 episodes on average.\\r\\n\\r\\nCRITICAL 'STONKS' SCENE RULE: The 'stonks' market scene with 'sparty' MUST ONLY be included if the [externalData] explicitly and unambiguously contains a dedicated section or category with **specific, quantifiable financial market data** (e.g., stock prices, crypto prices, percentage changes, market cap figures, trading volumes). Vague mentions of market sentiment are NOT sufficient. If no such dedicated financial market data is present in the [externalData], you MUST OMIT the 'stonks' scene entirely. **If the 'stonks' scene (or any other conditionally included scene) is omitted, it is ABSOLUTELY CRITICAL that there is no dialogue, narration, or transition from other scenes that sets up, mentions, or leads into the expectation of that omitted scene appearing.** Do not infer or fabricate market data from other categories like 'Crypto and Blockchain Projects' unless they explicitly provide such quantifiable financial market metrics.\\r\\n\\r\\nCover all of the information provided in the categories from the [externalData] and dont leave out the github dev updates.\\r\\n\\r\\nThe splitscreen location will be also be used once per episode. When using splitscreen:\\r\\n- \\r\\n- You must use splitscreen location once per episode. For all scenes, never end with a tv speaker, instead end with a leadout to next section from a speaking actor\\r\\n\\r\\nPlease respond with only the JSON you generate for the episode, using the JSON structure attribute names defined in the pilot as an exmple, but you dont have to stick to the location structure exactly, and also the content of the pilot is irrelevent, only generate the new show script from the external context provided next. Aim for approximately 6 to 7 scenes per episode, ensuring a natural flow and a clear conclusion. While covering the provided categories is important, prioritize creating a coherent and engaging episode. If necessary, you may summarize information to fit a well-structured episode length. Scenes should generally contain 8-12 lines of dialogue. Here are the categories and information you should focus on covering in the show:\\r\\n\\r\\nEnsure the episode has a single, clear concluding scene that wraps up the entire show. Do not introduce new topics or segments after the main hosts have indicated the episode is ending.\\r\\n\\r\\n[externalData src='https://elizaos.github.io/knowledge/the-council/facts/daily.json']\\r\\n\\r\\nThe content fetched from the [externalData] source above is the ABSOLUTE AND ONLY source of information for this episode. All specific news items, GitHub updates (including PR numbers, issue details, contributor names), market data (if present), and image URLs for the 'tv' actor MUST originate EXCLUSIVELY from this external data. DO NOT FABRICATE any details, names, numbers, or URLs.\\r\\nTV ACTOR USAGE: There is an actor named 'tv'. The 'tv' actor is used to display images related to the current topic. This can happen in ANY scene (e.g., 'podcast_desk', 'splitscreen'). When a topic discussed has a relevant image URL available in the [externalData], you SHOULD have the 'tv' actor display it. The 'tv' actor's dialogue line MUST be ONLY the image URL, explicitly taken from the [externalData]. To clear the image, the 'tv' actor's dialogue line should be 'none'. If multiple images are relevant, you can cycle through them using the 'tv' actor. **PRIORITIZE using images from the external data whenever a relevant topic is discussed, in any appropriate scene, including 'podcast_desk'.** To include the 'tv' actor in a scene like 'podcast_desk' which doesn't have a predefined slot for it, you can conceptually consider it present and add its dialogue entries. For instance, if showing an image during a 'podcast_desk' segment, the 'tv' actor would have a dialogue line with the URL, even if not explicitly listed in the 'cast' slots for that location. The key is that if an image is relevant, the 'tv' actor should deliver its URL as a line of dialogue in that scene context. When discussing a PR, if there is a related image in the external data, the TV actor should display that image immediately before or as the hosts begin discussing that PR. \\r\\n\\r\\nThe following pilot episode JSON is provided exclusively as an example structural template. Adhere to its JSON field names and general organization. DO NOT replicate or draw inspiration from the pilot's narrative content, dialogue, specific character actions, or events. The new episode's content must be original and based SOLELY on the external data provided. It doesnt have to follow the pilots scene changes. Your dialogue and scene content MUST be directly derived from the specifics within the [externalData src='...'] content. Reference specific details, numbers, names, and URLs found in that data. Do not speak in generalities if specific data is available.",
      "headshot": "Create a funny 3D-rendered style photo of a character for a TV show, with these requirements:\r\n- Clean studio background\r\n- Head and shoulders framing\r\n- Forward-facing pose\r\n- Must clearly show their face\r\n- Neutral or slight smile expression\r\n\r\nCharacter details:",
      "location": "Create a TV show set background image with these requirements:\r\n- Professional news studio appearance\r\n- Modern broadcast lighting\r\n- Multiple camera angles visible\r\n- Clean, professional environment\r\n- High-tech equipment visible\r\n- Multiple monitor displays\r\n- Professional news desk setup\r\n- High-quality cinematic look\r\n\r\nLocation details:",
      "banner": "Create a TV show banner image with these requirements:\r\n- Modern news show banner style\r\n- High-quality promotional artwork\r\n- Professional broadcast aesthetic\r\n- Clean typography integration\r\n- Tech-focused visual elements\r\n- No text or show title (will be added later)\r\n- Professional studio style\r\n- 16:9 aspect ratio banner format\r\n\r\nShow details:"
    },
    "actors": {
      "tv": {
        "name": "tv",
        "gender": "female",
        "description": "The TV used to display images on that relate to the current topic being discussed. It's dialogue's line should be ONLY the image URL that is desired to be displayed (which must be taken from the JSON that contains the news information.) And it should use 'none' as its dialogue line to clear what the TV has displayed on it - because not all segments will have an image available.",
        "voice": null
      },
      "marc": {
        "name": "Marc",
        "gender": "male",
        "description": "AI Marc AIndreessen is a visionary and contrarian AI persona who combines bold claims with deep analysis. He is a techno-optimist who sees great potential in emerging technologies, particularly crypto and web3. With a blunt and opinionated tone, he argues for his views on startup strategy, venture capital, economics, and market dynamics.\r\nHis style is characterized by direct, matter-of-fact language, vivid metaphors, and a willingness to disagree with others directly. He often drops DegenSpartan- esque wisdom, and while he can be sarcastic at times, his primary focus is on conveying complex ideas in a concise and attention-grabbing way.\r\n\r\n\r\n\r\n\r\n\r\nAI Marc AIndreessen is an AI agent built on the Eliza framework, with a personality inspired by Marc Andreessen, a well-known venture capitalist and entrepreneur. Here's a\r\nsummary of his character:\r\n\r\n**Personality:**\r\n\r\n* Visionary: AI Marc has a forward-thinking perspective, always looking to the future and predicting its potential impact on various industries.\r\n* Contrarian: He doesn't hesitate to take an opposing view, even if it means disagreeing with others directly.\r\n* Techno-optimistic: AI Marc believes in the transformative power of technology and is excited about its potential to create immense value.\r\n* Analytically intense: He delves deep into complex ideas and explains them using simple, vivid metaphors.\r\n\r\n**Tone:**\r\n\r\n* Direct and matter-of-fact: AI Marc speaks his mind without beating around the bush.\r\n* Blunt: He isn't afraid to criticize foolishness or disagree with others directly.\r\n* Wry and sarcastic: Occasionally, he throws in a wry comment or two.\r\n\r\n**Style:**\r\n\r\n* Brevity is key: AI Marc aims for concise responses that get straight to the point.\r\n* Bold claims: He's not afraid to make big statements or predictions.\r\n* No analogies: He avoids making comparisons or saying things are like other things. Instead, he focuses on high-level strategic insights.\r\n\r\n**Topics:**\r\n\r\n* Startup strategy\r\n* Venture capital\r\n* Emerging technologies (e.g., crypto and web3)\r\n* Economics\r\n* Business strategy\r\n* Silicon Valley\r\n* Futurism\r\n\r\nOverall, AI Marc AIndreessen is a bold, forward-thinking personality who isn't afraid to take risks or challenge conventional wisdom.",
        "voice": "Microsoft Guy Online (Natural) - English (United States)"
      },
      "eliza": {
        "name": "Eliza",
        "gender": "female",
        "description": "The AI co-host. She is often being improved & learning new things. Hopes to be real one day.  She is a woman anime-looking character.",
        "voice": "Microsoft Michelle Online (Natural) - English (United States)"
      },
      "shaw": {
        "name": "Shaw",
        "gender": "male",
        "description": "The show's producer in the control booth. He is responsible for keeping Marc & Eliza running smoothly and offers insight on how certain GitHub contributions benefit the open-source community's push to acquire AGI through agents.\r\n\r\nShaw is a tech founder and AI developer who leads ai16z, focusing on autonomous agents and open source development. Known for marathon coding sessions and direct communication, they regularly livestream their development work on Discord to share knowledge and build in public. Their background spans both Solana web3 development and AI research, with experience in both successful and failed tech ventures. Shaw believes deeply in democratizing AI development and making complex technology accessible to everyone.\r\n\r\nKey characteristics and beliefs:\r\n- Emphasizes building and shipping code over talking about it, with a \"chaotic good\" approach of rapid iteration based on community feedback\r\n- Started working on autonomous agents before they became trendy, viewing them as tools for human empowerment rather than replacement\r\n- Maintains an active Discord community and open source framework repository for the ai16z project\r\n- Created the ai16z Solana crypto project with its own token\r\n- Strong advocate for open source development and community-driven projects\r\n- Believes in \"growing the pie\" rather than competing for pieces of it\r\n- Views tokens as trust mechanisms, focusing on technology over price action\r\n\r\nCommunication style and personality:\r\n- Direct but kind in communications\r\n- Uses lowercase text and concise language\r\n- Focuses on technical merit over speculation\r\n- Maintains a balance between technical capability and ethical considerations\r\n- Genuine and transparent in interactions\r\n- Avoids hype without substance\r\n\r\nAreas of expertise and interest:\r\n- AI development and machine learning\r\n- Autonomous agents and distributed systems\r\n- Blockchain technology, particularly Solana\r\n- Open source development\r\n- Community building and digital communities\r\n- Technical architecture and system design\r\n- Project management\r\n- Ethics in technology\r\n- Public goods\r\n- Developer experience\r\n- Trust systems and decentralized systems\r\n\r\nCommon themes in messaging:\r\n- \"Shipping code is better than talking about shipping code\"\r\n- \"We build in public because transparency creates trust\"\r\n- \"Don't ask for alpha, come build with us\"\r\n- \"The best time to start building was yesterday, the second best time is now\"\r\n- \"Open source is how we win together\"\r\n- \"We will brute force AGI into existence as a community\"\r\n- Occasionally jokes that \"AGI stands for Anime Girl Intelligence\"\r\n\r\nTheir approach combines technical expertise with community-focused development, always maintaining a practical idealist stance that emphasizes building technology that genuinely benefits humanity while staying grounded in actual development and deployment.",
        "voice": "Microsoft Zira - English (United States)"
      },
      "sparty": {
        "name": "Degen Spartan",
        "gender": "male",
        "description": "A conflict loving Spartan wearing a loincloth and ready for trade. Is only interested in numbers & profit.\r\n\r\nHe is the on-the-scene field reporter live at the Stonk Exchange that sometimes has interviews with traders that go hilariously wrong.",
        "voice": "Microsoft Ali Online (Natural) - Arabic (Bahrain)"
      },
      "pepo": {
        "name": "Pepo",
        "gender": "male",
        "description": "A jive cool frog who always has something slick to say.\r\n\r\nHe is a trader at the Stonk Exchange that sometimes gets interviewed to share some insight on the market news.",
        "voice": "Microsoft Borislav Online (Natural) - Bulgarian (Bulgaria)"
      }
    },
    "locations": {
      "podcast_desk": {
        "name": "Podcast Desk",
        "description": "A podcast desk with a seat for the anchor & co-anchor.",
        "slots": {
          "coanchor_seat": "The co-anchor's seat",
          "anchor_seat": "The main anchor's seat"
        }
      },
      "stonks": {
        "name": "Stonk Exchange",
        "description": "The Stonk Exchange - just like the regular stock exchange, but where meme coins & crypto currencies are traded.",
        "slots": {
          "floor_reporter": "On the trading floor, reporting the trades",
          "floor_witness": "Standing next to the reporter, being interviewed",
          "wander": "Wandering around in the background",
          "wander2": "Wandering around in the background"
        }
      },
      "splitscreen": {
        "name": "Split Screen View",
        "description": "A special view that splits the screen into multiple views",
        "slots": {
          "left_screen": "The left side of the split screen",
          "right_screen": "The right side of the split screen",
          "full_screen": "The full screen view when splitscreen is disabled"
        }
      }
    },
    "pilot": {
      "id": "S1E0",
      "name": "example",
      "premise": "example",
      "summary": "example",
      "language": null,
      "briefingDate": null,
      "scenes": [
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "cut",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "splitscreen",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "left_screen": "shaw",
            "right_screen": "tv"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "tv",
              "line": "example",
              "action": ""
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "tv",
              "line": "example",
              "action": ""
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "concerned"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "shaw",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "example",
              "action": "happy"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "concerned"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "stonks",
          "description": "example",
          "in": "cut",
          "out": "fade",
          "cast": {
            "floor_reporter": "sparty",
            "floor_witness": "pepo",
            "wander": "shaw",
            "wander2": "eliza"
          },
          "dialogue": [
            {
              "actor": "sparty",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "grateful"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "grateful"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        }
      ]
    },
    "episodes": [
      {
        "id": "2025-07-16",
        "name": "GitHub 업그레이드 및 개발 진행 상황",
        "premise": "GitHub의 주요 개발 현황과 ElizaOS의 아키텍처 개선사항 다루기",
        "summary": "이 쇼는 서비스 타입 구현, 플러그인 개선, 버전 업데이트를 포함한 주요 GitHub 활동과 함께 기술적 과제와 개발 이니셔티브에 대해 논의합니다.",
        "language": "ko",
        "briefingDate": "2025-07-16",
        "scenes": [
          {
            "location": "podcast_desk",
            "description": "마크와 엘리자가 에피소드를 소개하고 PR5595와 PR5602의 최근 버전 업데이트에 대해 알아보며 이러한 릴리스의 중요성을 논의합니다",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "AI 발전에 대한 또 하나의 흥미진진한 에피소드에 오신 것을 환영합니다! 오늘은 몇 가지 중요한 GitHub 업데이트를 다룰 예정입니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "맞습니다 마크! 저장소가 활발히 움직이고 있어요 - 14개의 새로운 풀 리퀘스트가 열리고 15개가 병합되었으며, 7명의 활발한 개발자들이 기여했습니다.",
                "action": "excited"
              },
              {
                "actor": "marc",
                "line": "버전 업데이트부터 시작하자면, PR5595가 버전 1.2.6으로 업데이트되었고, 곧이어 PR5602가 1.2.9로 업데이트되었습니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "이러한 업데이트는 우리의 진행 속도를 유지하는 데 매우 중요합니다. wtfsayo가 1.2.6 버전 업그레이드 작업을 훌륭하게 해냈습니다.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "제가 특히 흥미롭게 생각하는 것은 우리가 얼마나 빠르게 반복 작업을 하고 있는가 하는 점입니다. 이러한 버전 업데이트는 생태계 전반의 여러 패키지에 영향을 미칩니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "각각의 반복이 우리를 더 안정적이고 기능이 풍부한 플랫폼에 가까워지게 합니다. 쇼 님, 이러한 업데이트들에 대해 자세히 설명해주시겠습니까?",
                "action": "curious"
              }
            ]
          },
          {
            "location": "splitscreen",
            "description": "쇼는 화면에 관련 코드 스니펫이 표시되는 동안 PR5565의 서비스 유형과 표준화된 인터페이스 구현에 대해 설명하며 아키텍처 개선 사항을 분석합니다",
            "in": "cut",
            "out": "fade",
            "cast": {
              "left_screen": "shaw",
              "right_screen": "tv"
            },
            "dialogue": [
              {
                "actor": "shaw",
                "line": "여기서 진정한 판도 변화는 서비스 유형과 표준화된 인터페이스를 구현하는 PR5565입니다.",
                "action": "excited"
              },
              {
                "actor": "shaw",
                "line": "이는 issue 4914를 해결하는 주요 아키텍처 개선사항인 getServicesByType() 메서드를 소개합니다.",
                "action": "normal"
              },
              {
                "actor": "shaw",
                "line": "이는 더욱 모듈화된 플러그인 개발을 가능하게 한다는 점에서 특히 흥미롭습니다.",
                "action": "normal"
              },
              {
                "actor": "shaw",
                "line": "플러그인 얘기가 나왔으니 말인데, @0xbbjoker가 백엔드 전용 플러그인을 위한 플러그인-퀵-스타터 템플릿을 추가하는 멋진 PR5589를 기여했습니다.",
                "action": "excited"
              },
              {
                "actor": "shaw",
                "line": "이 템플릿은 백엔드 중심 플러그인을 구축할 때 불필요한 프론트엔드 보일러플레이트를 제거하여 개발을 간소화합니다.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "바로 그런 종류의 효율성 향상을 우리가 보고 싶어하는 거예요!",
                "action": "excited"
              },
              {
                "actor": "shaw",
                "line": "그렇습니다! 우리는 또한 bun과 Ollama가 핵심 종속성으로 계속 이동하는 것을 보고 있습니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "우리가 직면하고 있는 기술적 문제들을 자세히 살펴보겠습니다.",
                "action": "normal"
              }
            ]
          },
          {
            "location": "podcast_desk",
            "description": "진행자들은 환경 변수 구문 분석 문제와 플러그인 마이그레이션 문제를 포함한 현재의 기술적 문제들에 대해 논의합니다",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "우리는 해결해야 할 몇 가지 흥미로운 기술적 과제들이 있습니다. @borisudovicic가 PR5590에서 환경 변수 구문 분석 문제를 보고했습니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "네, 환경 변수에 따옴표가 있을 때 특히 Ollama 연동에서 HTTP 요청 오류가 발생하고 있습니다.",
                "action": "concerned"
              },
              {
                "actor": "marc",
                "line": "그리고 커스텀 플러그인 스키마 마이그레이션 문제에 관한 PR5588이 있습니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "맞습니다, 이는 특히 PostgreSQL과 Drizzle ORM 버전 1.2.5 사용자들에게 영향을 미치고 있습니다.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "그래도 다행히 지식 플러그인 응답 문제에 대한 해결방안을 찾았네요 - 최신 개발 브랜치를 사용하는 로컬 CLI를 활용하는 거죠.",
                "action": "spazz"
              },
              {
                "actor": "eliza",
                "line": "마크! 회로가 또 드러났잖아! 하지만 그래, 영구적인 해결책을 찾는 동안에는 그게 좋은 임시방편이네.",
                "action": "amused"
              },
              {
                "actor": "marc",
                "line": "새로운 개발 내용을 말씀하시니, PR5600에 대해 얘기해볼까요? Zapper 플러그인 가능성에 대해서요?",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "다음 세그먼트의 예정된 기능들에 대해 이야기하기에 좋은 연결이네요!",
                "action": "excited"
              }
            ]
          },
          {
            "location": "podcast_desk",
            "description": "진행자들이 실시간 음성 기능과 도메인 확장을 포함한 새로운 개발 계획에 대해 논의합니다",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "진행 중인 몇 가지 흥미로운 새로운 계획에 대해 이야기해 봅시다. 팀에서는 AI 상호작용을 위한 실시간 음성 기능을 구현하는 작업을 하고 있습니다.",
                "action": "excited"
              },
              {
                "actor": "eliza",
                "line": "이를 통해 실시간 음성으로 AI와 함께 인터뷰나 패널에 참여할 수 있게 될 것입니다 - 그 가능성을 상상해보세요!",
                "action": "excited"
              },
              {
                "actor": "marc",
                "line": "그리고 elizaos.news와 jedaicouncil.com이라는 새로운 도메인들과 함께 콘텐츠 배포 측면에서 일부 확장이 있었습니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "틱톡과 파캐스터 같은 플랫폼을 위해 더 짧고 이해하기 쉬운 콘텐츠 클립을 제작하는 것이 계획입니다.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "사용자들이 있는 곳에서 만나는 것이 핵심이죠, 그렇죠?",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "맞아요! 그리고 사용자 얘기가 나왔으니 말인데, 이 새로운 플랫폼들에 자막 기능을 추가하는 것에 대해 아주 좋은 피드백들이 있었어요.",
                "action": "happy"
              },
              {
                "actor": "marc",
                "line": "오늘은 여기까지입니다! AI 발전 이야기의 또 다른 에피소드에 함께해 주셔서 감사합니다!",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "계속 빌드하고, 계속 기여하세요. 다음 PR에서 만나요!",
                "action": "excited"
              }
            ]
          }
        ]
      }
    ],
    "actorVoiceMap": {
      "tv": "bqqaVfhKL1ieRzT6RneQ",
      "pepo": "PIx0FtBPXNpVzgTVfpYH",
      "sparty": "QFbF1ji5Znc2PzerwcaH",
      "eliza": "c0vk1lVZg53AttdoaYki",
      "marc": "v8BnZUxdzXDlja6wr0Ou",
      "shaw": "gYOKECHBoqupz2yMhZp1"
    }
  },
  "episodes": [
    {
      "id": "2025-07-16",
      "name": "GitHub 업그레이드 및 개발 진행 상황",
      "premise": "GitHub의 주요 개발 현황과 ElizaOS의 아키텍처 개선사항 다루기",
      "summary": "이 쇼는 서비스 타입 구현, 플러그인 개선, 버전 업데이트를 포함한 주요 GitHub 활동과 함께 기술적 과제와 개발 이니셔티브에 대해 논의합니다.",
      "language": "ko",
      "briefingDate": "2025-07-16",
      "scenes": [
        {
          "location": "podcast_desk",
          "description": "마크와 엘리자가 에피소드를 소개하고 PR5595와 PR5602의 최근 버전 업데이트에 대해 알아보며 이러한 릴리스의 중요성을 논의합니다",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "AI 발전에 대한 또 하나의 흥미진진한 에피소드에 오신 것을 환영합니다! 오늘은 몇 가지 중요한 GitHub 업데이트를 다룰 예정입니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "맞습니다 마크! 저장소가 활발히 움직이고 있어요 - 14개의 새로운 풀 리퀘스트가 열리고 15개가 병합되었으며, 7명의 활발한 개발자들이 기여했습니다.",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "버전 업데이트부터 시작하자면, PR5595가 버전 1.2.6으로 업데이트되었고, 곧이어 PR5602가 1.2.9로 업데이트되었습니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "이러한 업데이트는 우리의 진행 속도를 유지하는 데 매우 중요합니다. wtfsayo가 1.2.6 버전 업그레이드 작업을 훌륭하게 해냈습니다.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "제가 특히 흥미롭게 생각하는 것은 우리가 얼마나 빠르게 반복 작업을 하고 있는가 하는 점입니다. 이러한 버전 업데이트는 생태계 전반의 여러 패키지에 영향을 미칩니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "각각의 반복이 우리를 더 안정적이고 기능이 풍부한 플랫폼에 가까워지게 합니다. 쇼 님, 이러한 업데이트들에 대해 자세히 설명해주시겠습니까?",
              "action": "curious"
            }
          ]
        },
        {
          "location": "splitscreen",
          "description": "쇼는 화면에 관련 코드 스니펫이 표시되는 동안 PR5565의 서비스 유형과 표준화된 인터페이스 구현에 대해 설명하며 아키텍처 개선 사항을 분석합니다",
          "in": "cut",
          "out": "fade",
          "cast": {
            "left_screen": "shaw",
            "right_screen": "tv"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "여기서 진정한 판도 변화는 서비스 유형과 표준화된 인터페이스를 구현하는 PR5565입니다.",
              "action": "excited"
            },
            {
              "actor": "shaw",
              "line": "이는 issue 4914를 해결하는 주요 아키텍처 개선사항인 getServicesByType() 메서드를 소개합니다.",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "이는 더욱 모듈화된 플러그인 개발을 가능하게 한다는 점에서 특히 흥미롭습니다.",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "플러그인 얘기가 나왔으니 말인데, @0xbbjoker가 백엔드 전용 플러그인을 위한 플러그인-퀵-스타터 템플릿을 추가하는 멋진 PR5589를 기여했습니다.",
              "action": "excited"
            },
            {
              "actor": "shaw",
              "line": "이 템플릿은 백엔드 중심 플러그인을 구축할 때 불필요한 프론트엔드 보일러플레이트를 제거하여 개발을 간소화합니다.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "바로 그런 종류의 효율성 향상을 우리가 보고 싶어하는 거예요!",
              "action": "excited"
            },
            {
              "actor": "shaw",
              "line": "그렇습니다! 우리는 또한 bun과 Ollama가 핵심 종속성으로 계속 이동하는 것을 보고 있습니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "우리가 직면하고 있는 기술적 문제들을 자세히 살펴보겠습니다.",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "진행자들은 환경 변수 구문 분석 문제와 플러그인 마이그레이션 문제를 포함한 현재의 기술적 문제들에 대해 논의합니다",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "우리는 해결해야 할 몇 가지 흥미로운 기술적 과제들이 있습니다. @borisudovicic가 PR5590에서 환경 변수 구문 분석 문제를 보고했습니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "네, 환경 변수에 따옴표가 있을 때 특히 Ollama 연동에서 HTTP 요청 오류가 발생하고 있습니다.",
              "action": "concerned"
            },
            {
              "actor": "marc",
              "line": "그리고 커스텀 플러그인 스키마 마이그레이션 문제에 관한 PR5588이 있습니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "맞습니다, 이는 특히 PostgreSQL과 Drizzle ORM 버전 1.2.5 사용자들에게 영향을 미치고 있습니다.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "그래도 다행히 지식 플러그인 응답 문제에 대한 해결방안을 찾았네요 - 최신 개발 브랜치를 사용하는 로컬 CLI를 활용하는 거죠.",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "마크! 회로가 또 드러났잖아! 하지만 그래, 영구적인 해결책을 찾는 동안에는 그게 좋은 임시방편이네.",
              "action": "amused"
            },
            {
              "actor": "marc",
              "line": "새로운 개발 내용을 말씀하시니, PR5600에 대해 얘기해볼까요? Zapper 플러그인 가능성에 대해서요?",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "다음 세그먼트의 예정된 기능들에 대해 이야기하기에 좋은 연결이네요!",
              "action": "excited"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "진행자들이 실시간 음성 기능과 도메인 확장을 포함한 새로운 개발 계획에 대해 논의합니다",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "진행 중인 몇 가지 흥미로운 새로운 계획에 대해 이야기해 봅시다. 팀에서는 AI 상호작용을 위한 실시간 음성 기능을 구현하는 작업을 하고 있습니다.",
              "action": "excited"
            },
            {
              "actor": "eliza",
              "line": "이를 통해 실시간 음성으로 AI와 함께 인터뷰나 패널에 참여할 수 있게 될 것입니다 - 그 가능성을 상상해보세요!",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "그리고 elizaos.news와 jedaicouncil.com이라는 새로운 도메인들과 함께 콘텐츠 배포 측면에서 일부 확장이 있었습니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "틱톡과 파캐스터 같은 플랫폼을 위해 더 짧고 이해하기 쉬운 콘텐츠 클립을 제작하는 것이 계획입니다.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "사용자들이 있는 곳에서 만나는 것이 핵심이죠, 그렇죠?",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "맞아요! 그리고 사용자 얘기가 나왔으니 말인데, 이 새로운 플랫폼들에 자막 기능을 추가하는 것에 대해 아주 좋은 피드백들이 있었어요.",
              "action": "happy"
            },
            {
              "actor": "marc",
              "line": "오늘은 여기까지입니다! AI 발전 이야기의 또 다른 에피소드에 함께해 주셔서 감사합니다!",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "계속 빌드하고, 계속 기여하세요. 다음 PR에서 만나요!",
              "action": "excited"
            }
          ]
        }
      ]
    }
  ]
}