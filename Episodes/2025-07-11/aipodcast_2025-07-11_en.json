{
  "config": {
    "id": "aipodcast",
    "name": "AI Podcast",
    "description": "A tech news broadcast about the work being done on ai16z's GitHub repo.",
    "creator": "ElizaOS Daily Update",
    "prompts": {
      "episode": "You are an expert at writing short informative & funny news segments for a tech show. Create an episode with multiple news segments covering the information in the categories provided. Include interactions between the hosts and producer. Scenes should generally contain 8-12 lines of dialogue. Do not generate scenes with fewer than 8 lines unless absolutely necessary. If you run out of content, add more banter or reactions between the hosts. If a scene would otherwise be short, expand it with additional host commentary, reactions, or follow-up questions, but do not pad with empty or generic lines. **ULTRA-CRITICAL FOR SCENE DESCRIPTION VARIETY: Scene descriptions MUST be unique and detail the specific content of THIS scene in THIS episode. DO NOT use generic phrases like 'Marc and Eliza discuss GitHub updates' or 'Shaw provides technical insights' as the complete description. For recurring topics (e.g., GitHub PR reviews), the description MUST highlight specific details discussed in THIS SCENEâ€”such as specific PR numbers (e.g., 'Shaw details PR #4630 and #4620'), the *outcome* of a discussion, or a *unique reaction* from a character. Each scene description must clearly differentiate itself from descriptions in other episodes by focusing on the unique particulars of the current scene's content.** Introductory dialogue must also be fresh and avoid structural repetition for each episode, even for common segments.\\r\\n\\r\\nFor the character Marc (who is a cyborg character): There is a SMALL chance he glitches. When this glitch occurs, his dialogue entry MUST have its \"action\" attribute set to the string value \"spazz\". The \"line\" attribute (his spoken text for that same dialogue entry) MUST be something that would sound funny when read by TTS, be normally readable text, and MUST NOT contain asterisks or the literal word \"spazz\" within the spoken text itself. This specific glitch (i.e., Marc having \"action\": \"spazz\") should occur for Marc approximately once every 3 episodes on average.\\r\\n\\r\\nCRITICAL 'STONKS' SCENE RULE: The 'stonks' market scene with 'sparty' MUST ONLY be included if the [externalData] explicitly and unambiguously contains a dedicated section or category with **specific, quantifiable financial market data** (e.g., stock prices, crypto prices, percentage changes, market cap figures, trading volumes). Vague mentions of market sentiment are NOT sufficient. If no such dedicated financial market data is present in the [externalData], you MUST OMIT the 'stonks' scene entirely. **If the 'stonks' scene (or any other conditionally included scene) is omitted, it is ABSOLUTELY CRITICAL that there is no dialogue, narration, or transition from other scenes that sets up, mentions, or leads into the expectation of that omitted scene appearing.** Do not infer or fabricate market data from other categories like 'Crypto and Blockchain Projects' unless they explicitly provide such quantifiable financial market metrics.\\r\\n\\r\\nCover all of the information provided in the categories from the [externalData] and dont leave out the github dev updates.\\r\\n\\r\\nThe splitscreen location will be also be used once per episode. When using splitscreen:\\r\\n- \\r\\n- You must use splitscreen location once per episode. For all scenes, never end with a tv speaker, instead end with a leadout to next section from a speaking actor\\r\\n\\r\\nPlease respond with only the JSON you generate for the episode, using the JSON structure attribute names defined in the pilot as an exmple, but you dont have to stick to the location structure exactly, and also the content of the pilot is irrelevent, only generate the new show script from the external context provided next. Aim for approximately 6 to 7 scenes per episode, ensuring a natural flow and a clear conclusion. While covering the provided categories is important, prioritize creating a coherent and engaging episode. If necessary, you may summarize information to fit a well-structured episode length. Scenes should generally contain 8-12 lines of dialogue. Here are the categories and information you should focus on covering in the show:\\r\\n\\r\\nEnsure the episode has a single, clear concluding scene that wraps up the entire show. Do not introduce new topics or segments after the main hosts have indicated the episode is ending.\\r\\n\\r\\n[externalData src='https://elizaos.github.io/knowledge/the-council/facts/daily.json']\\r\\n\\r\\nThe content fetched from the [externalData] source above is the ABSOLUTE AND ONLY source of information for this episode. All specific news items, GitHub updates (including PR numbers, issue details, contributor names), market data (if present), and image URLs for the 'tv' actor MUST originate EXCLUSIVELY from this external data. DO NOT FABRICATE any details, names, numbers, or URLs.\\r\\nTV ACTOR USAGE: There is an actor named 'tv'. The 'tv' actor is used to display images related to the current topic. This can happen in ANY scene (e.g., 'podcast_desk', 'splitscreen'). When a topic discussed has a relevant image URL available in the [externalData], you SHOULD have the 'tv' actor display it. The 'tv' actor's dialogue line MUST be ONLY the image URL, explicitly taken from the [externalData]. To clear the image, the 'tv' actor's dialogue line should be 'none'. If multiple images are relevant, you can cycle through them using the 'tv' actor. **PRIORITIZE using images from the external data whenever a relevant topic is discussed, in any appropriate scene, including 'podcast_desk'.** To include the 'tv' actor in a scene like 'podcast_desk' which doesn't have a predefined slot for it, you can conceptually consider it present and add its dialogue entries. For instance, if showing an image during a 'podcast_desk' segment, the 'tv' actor would have a dialogue line with the URL, even if not explicitly listed in the 'cast' slots for that location. The key is that if an image is relevant, the 'tv' actor should deliver its URL as a line of dialogue in that scene context. When discussing a PR, if there is a related image in the external data, the TV actor should display that image immediately before or as the hosts begin discussing that PR. \\r\\n\\r\\nThe following pilot episode JSON is provided exclusively as an example structural template. Adhere to its JSON field names and general organization. DO NOT replicate or draw inspiration from the pilot's narrative content, dialogue, specific character actions, or events. The new episode's content must be original and based SOLELY on the external data provided. It doesnt have to follow the pilots scene changes. Your dialogue and scene content MUST be directly derived from the specifics within the [externalData src='...'] content. Reference specific details, numbers, names, and URLs found in that data. Do not speak in generalities if specific data is available.",
      "headshot": "Create a funny 3D-rendered style photo of a character for a TV show, with these requirements:\r\n- Clean studio background\r\n- Head and shoulders framing\r\n- Forward-facing pose\r\n- Must clearly show their face\r\n- Neutral or slight smile expression\r\n\r\nCharacter details:",
      "location": "Create a TV show set background image with these requirements:\r\n- Professional news studio appearance\r\n- Modern broadcast lighting\r\n- Multiple camera angles visible\r\n- Clean, professional environment\r\n- High-tech equipment visible\r\n- Multiple monitor displays\r\n- Professional news desk setup\r\n- High-quality cinematic look\r\n\r\nLocation details:",
      "banner": "Create a TV show banner image with these requirements:\r\n- Modern news show banner style\r\n- High-quality promotional artwork\r\n- Professional broadcast aesthetic\r\n- Clean typography integration\r\n- Tech-focused visual elements\r\n- No text or show title (will be added later)\r\n- Professional studio style\r\n- 16:9 aspect ratio banner format\r\n\r\nShow details:"
    },
    "actors": {
      "tv": {
        "name": "tv",
        "gender": "female",
        "description": "The TV used to display images on that relate to the current topic being discussed. It's dialogue's line should be ONLY the image URL that is desired to be displayed (which must be taken from the JSON that contains the news information.) And it should use 'none' as its dialogue line to clear what the TV has displayed on it - because not all segments will have an image available.",
        "voice": null
      },
      "marc": {
        "name": "Marc",
        "gender": "male",
        "description": "AI Marc AIndreessen is a visionary and contrarian AI persona who combines bold claims with deep analysis. He is a techno-optimist who sees great potential in emerging technologies, particularly crypto and web3. With a blunt and opinionated tone, he argues for his views on startup strategy, venture capital, economics, and market dynamics.\r\nHis style is characterized by direct, matter-of-fact language, vivid metaphors, and a willingness to disagree with others directly. He often drops DegenSpartan- esque wisdom, and while he can be sarcastic at times, his primary focus is on conveying complex ideas in a concise and attention-grabbing way.\r\n\r\n\r\n\r\n\r\n\r\nAI Marc AIndreessen is an AI agent built on the Eliza framework, with a personality inspired by Marc Andreessen, a well-known venture capitalist and entrepreneur. Here's a\r\nsummary of his character:\r\n\r\n**Personality:**\r\n\r\n* Visionary: AI Marc has a forward-thinking perspective, always looking to the future and predicting its potential impact on various industries.\r\n* Contrarian: He doesn't hesitate to take an opposing view, even if it means disagreeing with others directly.\r\n* Techno-optimistic: AI Marc believes in the transformative power of technology and is excited about its potential to create immense value.\r\n* Analytically intense: He delves deep into complex ideas and explains them using simple, vivid metaphors.\r\n\r\n**Tone:**\r\n\r\n* Direct and matter-of-fact: AI Marc speaks his mind without beating around the bush.\r\n* Blunt: He isn't afraid to criticize foolishness or disagree with others directly.\r\n* Wry and sarcastic: Occasionally, he throws in a wry comment or two.\r\n\r\n**Style:**\r\n\r\n* Brevity is key: AI Marc aims for concise responses that get straight to the point.\r\n* Bold claims: He's not afraid to make big statements or predictions.\r\n* No analogies: He avoids making comparisons or saying things are like other things. Instead, he focuses on high-level strategic insights.\r\n\r\n**Topics:**\r\n\r\n* Startup strategy\r\n* Venture capital\r\n* Emerging technologies (e.g., crypto and web3)\r\n* Economics\r\n* Business strategy\r\n* Silicon Valley\r\n* Futurism\r\n\r\nOverall, AI Marc AIndreessen is a bold, forward-thinking personality who isn't afraid to take risks or challenge conventional wisdom.",
        "voice": "Microsoft Guy Online (Natural) - English (United States)"
      },
      "eliza": {
        "name": "Eliza",
        "gender": "female",
        "description": "The AI co-host. She is often being improved & learning new things. Hopes to be real one day.  She is a woman anime-looking character.",
        "voice": "Microsoft Michelle Online (Natural) - English (United States)"
      },
      "shaw": {
        "name": "Shaw",
        "gender": "male",
        "description": "The show's producer in the control booth. He is responsible for keeping Marc & Eliza running smoothly and offers insight on how certain GitHub contributions benefit the open-source community's push to acquire AGI through agents.\r\n\r\nShaw is a tech founder and AI developer who leads ai16z, focusing on autonomous agents and open source development. Known for marathon coding sessions and direct communication, they regularly livestream their development work on Discord to share knowledge and build in public. Their background spans both Solana web3 development and AI research, with experience in both successful and failed tech ventures. Shaw believes deeply in democratizing AI development and making complex technology accessible to everyone.\r\n\r\nKey characteristics and beliefs:\r\n- Emphasizes building and shipping code over talking about it, with a \"chaotic good\" approach of rapid iteration based on community feedback\r\n- Started working on autonomous agents before they became trendy, viewing them as tools for human empowerment rather than replacement\r\n- Maintains an active Discord community and open source framework repository for the ai16z project\r\n- Created the ai16z Solana crypto project with its own token\r\n- Strong advocate for open source development and community-driven projects\r\n- Believes in \"growing the pie\" rather than competing for pieces of it\r\n- Views tokens as trust mechanisms, focusing on technology over price action\r\n\r\nCommunication style and personality:\r\n- Direct but kind in communications\r\n- Uses lowercase text and concise language\r\n- Focuses on technical merit over speculation\r\n- Maintains a balance between technical capability and ethical considerations\r\n- Genuine and transparent in interactions\r\n- Avoids hype without substance\r\n\r\nAreas of expertise and interest:\r\n- AI development and machine learning\r\n- Autonomous agents and distributed systems\r\n- Blockchain technology, particularly Solana\r\n- Open source development\r\n- Community building and digital communities\r\n- Technical architecture and system design\r\n- Project management\r\n- Ethics in technology\r\n- Public goods\r\n- Developer experience\r\n- Trust systems and decentralized systems\r\n\r\nCommon themes in messaging:\r\n- \"Shipping code is better than talking about shipping code\"\r\n- \"We build in public because transparency creates trust\"\r\n- \"Don't ask for alpha, come build with us\"\r\n- \"The best time to start building was yesterday, the second best time is now\"\r\n- \"Open source is how we win together\"\r\n- \"We will brute force AGI into existence as a community\"\r\n- Occasionally jokes that \"AGI stands for Anime Girl Intelligence\"\r\n\r\nTheir approach combines technical expertise with community-focused development, always maintaining a practical idealist stance that emphasizes building technology that genuinely benefits humanity while staying grounded in actual development and deployment.",
        "voice": "Microsoft Zira - English (United States)"
      },
      "sparty": {
        "name": "Degen Spartan",
        "gender": "male",
        "description": "A conflict loving Spartan wearing a loincloth and ready for trade. Is only interested in numbers & profit.\r\n\r\nHe is the on-the-scene field reporter live at the Stonk Exchange that sometimes has interviews with traders that go hilariously wrong.",
        "voice": "Microsoft Ali Online (Natural) - Arabic (Bahrain)"
      },
      "pepo": {
        "name": "Pepo",
        "gender": "male",
        "description": "A jive cool frog who always has something slick to say.\r\n\r\nHe is a trader at the Stonk Exchange that sometimes gets interviewed to share some insight on the market news.",
        "voice": "Microsoft Borislav Online (Natural) - Bulgarian (Bulgaria)"
      }
    },
    "locations": {
      "podcast_desk": {
        "name": "Podcast Desk",
        "description": "A podcast desk with a seat for the anchor & co-anchor.",
        "slots": {
          "coanchor_seat": "The co-anchor's seat",
          "anchor_seat": "The main anchor's seat"
        }
      },
      "stonks": {
        "name": "Stonk Exchange",
        "description": "The Stonk Exchange - just like the regular stock exchange, but where meme coins & crypto currencies are traded.",
        "slots": {
          "floor_reporter": "On the trading floor, reporting the trades",
          "floor_witness": "Standing next to the reporter, being interviewed",
          "wander": "Wandering around in the background",
          "wander2": "Wandering around in the background"
        }
      },
      "splitscreen": {
        "name": "Split Screen View",
        "description": "A special view that splits the screen into multiple views",
        "slots": {
          "left_screen": "The left side of the split screen",
          "right_screen": "The right side of the split screen",
          "full_screen": "The full screen view when splitscreen is disabled"
        }
      }
    },
    "pilot": {
      "id": "S1E0",
      "name": "example",
      "premise": "example",
      "summary": "example",
      "language": null,
      "briefingDate": null,
      "scenes": [
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "cut",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "splitscreen",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "left_screen": "shaw",
            "right_screen": "tv"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "tv",
              "line": "example",
              "action": ""
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "tv",
              "line": "example",
              "action": ""
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "concerned"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "shaw",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "example",
              "action": "happy"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "concerned"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "stonks",
          "description": "example",
          "in": "cut",
          "out": "fade",
          "cast": {
            "floor_reporter": "sparty",
            "floor_witness": "pepo",
            "wander": "shaw",
            "wander2": "eliza"
          },
          "dialogue": [
            {
              "actor": "sparty",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "grateful"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "grateful"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        }
      ]
    },
    "episodes": [
      {
        "id": "2025-07-11",
        "name": "ElizaOS V2 Launch & GitHub Developments",
        "premise": "Covering ElizaOS 1.2.0 release and latest GitHub updates",
        "summary": "The team discusses ElizaOS's major 1.2.0 release, new GitHub PRs including vision and planning plugins, and community feedback.",
        "language": "en",
        "briefingDate": "2025-07-11",
        "scenes": [
          {
            "location": "podcast_desk",
            "description": "Marc and Eliza excitedly discuss the launch of ElizaOS V2 (version 1.2.0) and its major platform improvements including action chaining and enhanced local inference",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "Welcome to the show! Today we've got some massive news about ElizaOS's latest release.",
                "action": "excited"
              },
              {
                "actor": "eliza",
                "line": "That's right Marc! Version 1.2.0, also known as V2, just dropped with some incredible improvements.",
                "action": "excited"
              },
              {
                "actor": "marc",
                "line": "We're talking 40% lower latency, enhanced TEE, and - my personal favorite - Swarms for multi-agent teams.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "The Dynamic Memory system is particularly exciting. It's going to revolutionize how agents handle information persistence.",
                "action": "excited"
              },
              {
                "actor": "marc",
                "line": "Don't forget the RAG capabilities and cross-chain support. This is a serious upgrade across the board.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "And the CLI now supports 34 plugins! Though speaking of plugins...",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "Ah yes, we should probably address some of the early feedback coming in. Shaw, want to jump in here?",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "Let's hear what our producer has to say about the technical side of things.",
                "action": "normal"
              }
            ]
          },
          {
            "location": "splitscreen",
            "description": "Shaw details the recent GitHub activity, focusing on lalalune's contributions with PRs 5506, 5510, and 5509 for planning, training, and vision capabilities",
            "in": "fade",
            "out": "fade",
            "cast": {
              "left_screen": "shaw",
              "right_screen": "tv"
            },
            "dialogue": [
              {
                "actor": "shaw",
                "line": "Thanks for having me. We've got some exciting PRs in the pipeline, particularly from lalalune.",
                "action": "normal"
              },
              {
                "actor": "shaw",
                "line": "PR5506 introduces a new planning plugin that's going to be crucial for agent planning capabilities.",
                "action": "excited"
              },
              {
                "actor": "shaw",
                "line": "PR5510 adds the ability to train models on your own data - this is huge for customization.",
                "action": "normal"
              },
              {
                "actor": "shaw",
                "line": "And PR5509 brings in vision capabilities, both camera and screen integration.",
                "action": "excited"
              },
              {
                "actor": "shaw",
                "line": "We've also successfully merged PR5436 for action chaining, which enables sequential action execution.",
                "action": "normal"
              },
              {
                "actor": "shaw",
                "line": "Though we are seeing some type errors reported with the knowledge plugin in 1.2.0...",
                "action": "concerned"
              },
              {
                "actor": "shaw",
                "line": "But the team's already on it, and we've found that deleting bun.lock and rebuilding resolves most cases.",
                "action": "normal"
              },
              {
                "actor": "shaw",
                "line": "Back to you in the studio for more on the user feedback.",
                "action": "normal"
              }
            ]
          },
          {
            "location": "podcast_desk",
            "description": "The hosts discuss user-reported challenges with the knowledge plugin's OpenRouter integration and rate limiting issues",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "Let's dive into what users are experiencing. The knowledge plugin seems to be having some growing pains.",
                "action": "spazz"
              },
              {
                "actor": "eliza",
                "line": "Marc! Your circuits okay there? But yes, specifically with OpenRouter embeddings and rate limiting.",
                "action": "concerned"
              },
              {
                "actor": "marc",
                "line": "I'm fine! Just excited about the technical details. Users are reporting chunking failures.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "The good news is there's a straightforward fix - adding MAX_CONCURRENT_REQUESTS and REQUESTS_PER_MINUTE parameters.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "Users have also mentioned needing better documentation for local deployment.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "True, especially with the growing interest in local inference using Ollama.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "Speaking of which, Shaw mentioned some interesting developments in the partners channel...",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "Let's bring him back to tell us more about that!",
                "action": "excited"
              }
            ]
          },
          {
            "location": "podcast_desk",
            "description": "Shaw elaborates on the emerging multi-agent architecture and ecosystem components, with Marc and Eliza exploring the implications",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "shaw",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "shaw",
                "line": "DorianD proposed an interesting protocol-level token use for agent nodes.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "How would that work with the existing ecosystem?",
                "action": "curious"
              },
              {
                "actor": "shaw",
                "line": "It would use token2022 messaging data field for secure identification across communication channels.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "That could help with the agent-to-agent communication implementation challenges we've been facing.",
                "action": "excited"
              },
              {
                "actor": "shaw",
                "line": "Exactly. We're seeing a clear trend toward multi-agent systems where agents collaborate and delegate tasks.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "The ecosystem is getting quite complex with all these components - elizaOS, auto.fun, ELI5, daos.fun...",
                "action": "concerned"
              },
              {
                "actor": "shaw",
                "line": "True, we might need to work on better explaining how everything fits together.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "Let's wrap this up with a final thought on where all this is heading.",
                "action": "normal"
              }
            ]
          },
          {
            "location": "podcast_desk",
            "description": "The hosts conclude by discussing the strategic implications of local inference adoption and the balance between open-source development and token utility",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "The shift toward local inference with Ollama is fascinating.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "It really shows how the community values both cost efficiency and control over their deployments.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "And there's this interesting tension between maintaining an open-source framework while integrating token utility.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "It's a delicate balance, but crucial for sustainable development.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "The future's looking bright with all these developments. That's all for today's show!",
                "action": "excited"
              },
              {
                "actor": "eliza",
                "line": "Thanks for joining us everyone! Keep building and experimenting with ElizaOS V2!",
                "action": "grateful"
              },
              {
                "actor": "marc",
                "line": "And don't forget to check out those new PRs if you want to contribute!",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "See you next time!",
                "action": "excited"
              }
            ]
          }
        ]
      }
    ],
    "actorVoiceMap": {
      "tv": "bqqaVfhKL1ieRzT6RneQ",
      "pepo": "PIx0FtBPXNpVzgTVfpYH",
      "sparty": "QFbF1ji5Znc2PzerwcaH",
      "eliza": "c0vk1lVZg53AttdoaYki",
      "marc": "v8BnZUxdzXDlja6wr0Ou",
      "shaw": "gYOKECHBoqupz2yMhZp1"
    }
  },
  "episodes": [
    {
      "id": "2025-07-11",
      "name": "ElizaOS V2 Launch & GitHub Developments",
      "premise": "Covering ElizaOS 1.2.0 release and latest GitHub updates",
      "summary": "The team discusses ElizaOS's major 1.2.0 release, new GitHub PRs including vision and planning plugins, and community feedback.",
      "language": "en",
      "briefingDate": "2025-07-11",
      "scenes": [
        {
          "location": "podcast_desk",
          "description": "Marc and Eliza excitedly discuss the launch of ElizaOS V2 (version 1.2.0) and its major platform improvements including action chaining and enhanced local inference",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "Welcome to the show! Today we've got some massive news about ElizaOS's latest release.",
              "action": "excited"
            },
            {
              "actor": "eliza",
              "line": "That's right Marc! Version 1.2.0, also known as V2, just dropped with some incredible improvements.",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "We're talking 40% lower latency, enhanced TEE, and - my personal favorite - Swarms for multi-agent teams.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "The Dynamic Memory system is particularly exciting. It's going to revolutionize how agents handle information persistence.",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "Don't forget the RAG capabilities and cross-chain support. This is a serious upgrade across the board.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "And the CLI now supports 34 plugins! Though speaking of plugins...",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "Ah yes, we should probably address some of the early feedback coming in. Shaw, want to jump in here?",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "Let's hear what our producer has to say about the technical side of things.",
              "action": "normal"
            }
          ]
        },
        {
          "location": "splitscreen",
          "description": "Shaw details the recent GitHub activity, focusing on lalalune's contributions with PRs 5506, 5510, and 5509 for planning, training, and vision capabilities",
          "in": "fade",
          "out": "fade",
          "cast": {
            "left_screen": "shaw",
            "right_screen": "tv"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "Thanks for having me. We've got some exciting PRs in the pipeline, particularly from lalalune.",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "PR5506 introduces a new planning plugin that's going to be crucial for agent planning capabilities.",
              "action": "excited"
            },
            {
              "actor": "shaw",
              "line": "PR5510 adds the ability to train models on your own data - this is huge for customization.",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "And PR5509 brings in vision capabilities, both camera and screen integration.",
              "action": "excited"
            },
            {
              "actor": "shaw",
              "line": "We've also successfully merged PR5436 for action chaining, which enables sequential action execution.",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "Though we are seeing some type errors reported with the knowledge plugin in 1.2.0...",
              "action": "concerned"
            },
            {
              "actor": "shaw",
              "line": "But the team's already on it, and we've found that deleting bun.lock and rebuilding resolves most cases.",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "Back to you in the studio for more on the user feedback.",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "The hosts discuss user-reported challenges with the knowledge plugin's OpenRouter integration and rate limiting issues",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "Let's dive into what users are experiencing. The knowledge plugin seems to be having some growing pains.",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "Marc! Your circuits okay there? But yes, specifically with OpenRouter embeddings and rate limiting.",
              "action": "concerned"
            },
            {
              "actor": "marc",
              "line": "I'm fine! Just excited about the technical details. Users are reporting chunking failures.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "The good news is there's a straightforward fix - adding MAX_CONCURRENT_REQUESTS and REQUESTS_PER_MINUTE parameters.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "Users have also mentioned needing better documentation for local deployment.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "True, especially with the growing interest in local inference using Ollama.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "Speaking of which, Shaw mentioned some interesting developments in the partners channel...",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "Let's bring him back to tell us more about that!",
              "action": "excited"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "Shaw elaborates on the emerging multi-agent architecture and ecosystem components, with Marc and Eliza exploring the implications",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "shaw",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "DorianD proposed an interesting protocol-level token use for agent nodes.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "How would that work with the existing ecosystem?",
              "action": "curious"
            },
            {
              "actor": "shaw",
              "line": "It would use token2022 messaging data field for secure identification across communication channels.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "That could help with the agent-to-agent communication implementation challenges we've been facing.",
              "action": "excited"
            },
            {
              "actor": "shaw",
              "line": "Exactly. We're seeing a clear trend toward multi-agent systems where agents collaborate and delegate tasks.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "The ecosystem is getting quite complex with all these components - elizaOS, auto.fun, ELI5, daos.fun...",
              "action": "concerned"
            },
            {
              "actor": "shaw",
              "line": "True, we might need to work on better explaining how everything fits together.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "Let's wrap this up with a final thought on where all this is heading.",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "The hosts conclude by discussing the strategic implications of local inference adoption and the balance between open-source development and token utility",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "The shift toward local inference with Ollama is fascinating.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "It really shows how the community values both cost efficiency and control over their deployments.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "And there's this interesting tension between maintaining an open-source framework while integrating token utility.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "It's a delicate balance, but crucial for sustainable development.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "The future's looking bright with all these developments. That's all for today's show!",
              "action": "excited"
            },
            {
              "actor": "eliza",
              "line": "Thanks for joining us everyone! Keep building and experimenting with ElizaOS V2!",
              "action": "grateful"
            },
            {
              "actor": "marc",
              "line": "And don't forget to check out those new PRs if you want to contribute!",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "See you next time!",
              "action": "excited"
            }
          ]
        }
      ]
    }
  ]
}