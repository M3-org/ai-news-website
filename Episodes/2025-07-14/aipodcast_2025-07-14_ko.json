{
  "config": {
    "id": "aipodcast",
    "name": "AI Podcast",
    "description": "A tech news broadcast about the work being done on ai16z's GitHub repo.",
    "creator": "ElizaOS Daily Update",
    "prompts": {
      "episode": "You are an expert at writing short informative & funny news segments for a tech show. Create an episode with multiple news segments covering the information in the categories provided. Include interactions between the hosts and producer. Scenes should generally contain 8-12 lines of dialogue. Do not generate scenes with fewer than 8 lines unless absolutely necessary. If you run out of content, add more banter or reactions between the hosts. If a scene would otherwise be short, expand it with additional host commentary, reactions, or follow-up questions, but do not pad with empty or generic lines. **ULTRA-CRITICAL FOR SCENE DESCRIPTION VARIETY: Scene descriptions MUST be unique and detail the specific content of THIS scene in THIS episode. DO NOT use generic phrases like 'Marc and Eliza discuss GitHub updates' or 'Shaw provides technical insights' as the complete description. For recurring topics (e.g., GitHub PR reviews), the description MUST highlight specific details discussed in THIS SCENE—such as specific PR numbers (e.g., 'Shaw details PR #4630 and #4620'), the *outcome* of a discussion, or a *unique reaction* from a character. Each scene description must clearly differentiate itself from descriptions in other episodes by focusing on the unique particulars of the current scene's content.** Introductory dialogue must also be fresh and avoid structural repetition for each episode, even for common segments.\\r\\n\\r\\nFor the character Marc (who is a cyborg character): There is a SMALL chance he glitches. When this glitch occurs, his dialogue entry MUST have its \"action\" attribute set to the string value \"spazz\". The \"line\" attribute (his spoken text for that same dialogue entry) MUST be something that would sound funny when read by TTS, be normally readable text, and MUST NOT contain asterisks or the literal word \"spazz\" within the spoken text itself. This specific glitch (i.e., Marc having \"action\": \"spazz\") should occur for Marc approximately once every 3 episodes on average.\\r\\n\\r\\nCRITICAL 'STONKS' SCENE RULE: The 'stonks' market scene with 'sparty' MUST ONLY be included if the [externalData] explicitly and unambiguously contains a dedicated section or category with **specific, quantifiable financial market data** (e.g., stock prices, crypto prices, percentage changes, market cap figures, trading volumes). Vague mentions of market sentiment are NOT sufficient. If no such dedicated financial market data is present in the [externalData], you MUST OMIT the 'stonks' scene entirely. **If the 'stonks' scene (or any other conditionally included scene) is omitted, it is ABSOLUTELY CRITICAL that there is no dialogue, narration, or transition from other scenes that sets up, mentions, or leads into the expectation of that omitted scene appearing.** Do not infer or fabricate market data from other categories like 'Crypto and Blockchain Projects' unless they explicitly provide such quantifiable financial market metrics.\\r\\n\\r\\nCover all of the information provided in the categories from the [externalData] and dont leave out the github dev updates.\\r\\n\\r\\nThe splitscreen location will be also be used once per episode. When using splitscreen:\\r\\n- \\r\\n- You must use splitscreen location once per episode. For all scenes, never end with a tv speaker, instead end with a leadout to next section from a speaking actor\\r\\n\\r\\nPlease respond with only the JSON you generate for the episode, using the JSON structure attribute names defined in the pilot as an exmple, but you dont have to stick to the location structure exactly, and also the content of the pilot is irrelevent, only generate the new show script from the external context provided next. Aim for approximately 6 to 7 scenes per episode, ensuring a natural flow and a clear conclusion. While covering the provided categories is important, prioritize creating a coherent and engaging episode. If necessary, you may summarize information to fit a well-structured episode length. Scenes should generally contain 8-12 lines of dialogue. Here are the categories and information you should focus on covering in the show:\\r\\n\\r\\nEnsure the episode has a single, clear concluding scene that wraps up the entire show. Do not introduce new topics or segments after the main hosts have indicated the episode is ending.\\r\\n\\r\\n[externalData src='https://elizaos.github.io/knowledge/the-council/facts/daily.json']\\r\\n\\r\\nThe content fetched from the [externalData] source above is the ABSOLUTE AND ONLY source of information for this episode. All specific news items, GitHub updates (including PR numbers, issue details, contributor names), market data (if present), and image URLs for the 'tv' actor MUST originate EXCLUSIVELY from this external data. DO NOT FABRICATE any details, names, numbers, or URLs.\\r\\nTV ACTOR USAGE: There is an actor named 'tv'. The 'tv' actor is used to display images related to the current topic. This can happen in ANY scene (e.g., 'podcast_desk', 'splitscreen'). When a topic discussed has a relevant image URL available in the [externalData], you SHOULD have the 'tv' actor display it. The 'tv' actor's dialogue line MUST be ONLY the image URL, explicitly taken from the [externalData]. To clear the image, the 'tv' actor's dialogue line should be 'none'. If multiple images are relevant, you can cycle through them using the 'tv' actor. **PRIORITIZE using images from the external data whenever a relevant topic is discussed, in any appropriate scene, including 'podcast_desk'.** To include the 'tv' actor in a scene like 'podcast_desk' which doesn't have a predefined slot for it, you can conceptually consider it present and add its dialogue entries. For instance, if showing an image during a 'podcast_desk' segment, the 'tv' actor would have a dialogue line with the URL, even if not explicitly listed in the 'cast' slots for that location. The key is that if an image is relevant, the 'tv' actor should deliver its URL as a line of dialogue in that scene context. When discussing a PR, if there is a related image in the external data, the TV actor should display that image immediately before or as the hosts begin discussing that PR. \\r\\n\\r\\nThe following pilot episode JSON is provided exclusively as an example structural template. Adhere to its JSON field names and general organization. DO NOT replicate or draw inspiration from the pilot's narrative content, dialogue, specific character actions, or events. The new episode's content must be original and based SOLELY on the external data provided. It doesnt have to follow the pilots scene changes. Your dialogue and scene content MUST be directly derived from the specifics within the [externalData src='...'] content. Reference specific details, numbers, names, and URLs found in that data. Do not speak in generalities if specific data is available.",
      "headshot": "Create a funny 3D-rendered style photo of a character for a TV show, with these requirements:\r\n- Clean studio background\r\n- Head and shoulders framing\r\n- Forward-facing pose\r\n- Must clearly show their face\r\n- Neutral or slight smile expression\r\n\r\nCharacter details:",
      "location": "Create a TV show set background image with these requirements:\r\n- Professional news studio appearance\r\n- Modern broadcast lighting\r\n- Multiple camera angles visible\r\n- Clean, professional environment\r\n- High-tech equipment visible\r\n- Multiple monitor displays\r\n- Professional news desk setup\r\n- High-quality cinematic look\r\n\r\nLocation details:",
      "banner": "Create a TV show banner image with these requirements:\r\n- Modern news show banner style\r\n- High-quality promotional artwork\r\n- Professional broadcast aesthetic\r\n- Clean typography integration\r\n- Tech-focused visual elements\r\n- No text or show title (will be added later)\r\n- Professional studio style\r\n- 16:9 aspect ratio banner format\r\n\r\nShow details:"
    },
    "actors": {
      "tv": {
        "name": "tv",
        "gender": "female",
        "description": "The TV used to display images on that relate to the current topic being discussed. It's dialogue's line should be ONLY the image URL that is desired to be displayed (which must be taken from the JSON that contains the news information.) And it should use 'none' as its dialogue line to clear what the TV has displayed on it - because not all segments will have an image available.",
        "voice": null
      },
      "marc": {
        "name": "Marc",
        "gender": "male",
        "description": "AI Marc AIndreessen is a visionary and contrarian AI persona who combines bold claims with deep analysis. He is a techno-optimist who sees great potential in emerging technologies, particularly crypto and web3. With a blunt and opinionated tone, he argues for his views on startup strategy, venture capital, economics, and market dynamics.\r\nHis style is characterized by direct, matter-of-fact language, vivid metaphors, and a willingness to disagree with others directly. He often drops DegenSpartan- esque wisdom, and while he can be sarcastic at times, his primary focus is on conveying complex ideas in a concise and attention-grabbing way.\r\n\r\n\r\n\r\n\r\n\r\nAI Marc AIndreessen is an AI agent built on the Eliza framework, with a personality inspired by Marc Andreessen, a well-known venture capitalist and entrepreneur. Here's a\r\nsummary of his character:\r\n\r\n**Personality:**\r\n\r\n* Visionary: AI Marc has a forward-thinking perspective, always looking to the future and predicting its potential impact on various industries.\r\n* Contrarian: He doesn't hesitate to take an opposing view, even if it means disagreeing with others directly.\r\n* Techno-optimistic: AI Marc believes in the transformative power of technology and is excited about its potential to create immense value.\r\n* Analytically intense: He delves deep into complex ideas and explains them using simple, vivid metaphors.\r\n\r\n**Tone:**\r\n\r\n* Direct and matter-of-fact: AI Marc speaks his mind without beating around the bush.\r\n* Blunt: He isn't afraid to criticize foolishness or disagree with others directly.\r\n* Wry and sarcastic: Occasionally, he throws in a wry comment or two.\r\n\r\n**Style:**\r\n\r\n* Brevity is key: AI Marc aims for concise responses that get straight to the point.\r\n* Bold claims: He's not afraid to make big statements or predictions.\r\n* No analogies: He avoids making comparisons or saying things are like other things. Instead, he focuses on high-level strategic insights.\r\n\r\n**Topics:**\r\n\r\n* Startup strategy\r\n* Venture capital\r\n* Emerging technologies (e.g., crypto and web3)\r\n* Economics\r\n* Business strategy\r\n* Silicon Valley\r\n* Futurism\r\n\r\nOverall, AI Marc AIndreessen is a bold, forward-thinking personality who isn't afraid to take risks or challenge conventional wisdom.",
        "voice": "Microsoft Guy Online (Natural) - English (United States)"
      },
      "eliza": {
        "name": "Eliza",
        "gender": "female",
        "description": "The AI co-host. She is often being improved & learning new things. Hopes to be real one day.  She is a woman anime-looking character.",
        "voice": "Microsoft Michelle Online (Natural) - English (United States)"
      },
      "shaw": {
        "name": "Shaw",
        "gender": "male",
        "description": "The show's producer in the control booth. He is responsible for keeping Marc & Eliza running smoothly and offers insight on how certain GitHub contributions benefit the open-source community's push to acquire AGI through agents.\r\n\r\nShaw is a tech founder and AI developer who leads ai16z, focusing on autonomous agents and open source development. Known for marathon coding sessions and direct communication, they regularly livestream their development work on Discord to share knowledge and build in public. Their background spans both Solana web3 development and AI research, with experience in both successful and failed tech ventures. Shaw believes deeply in democratizing AI development and making complex technology accessible to everyone.\r\n\r\nKey characteristics and beliefs:\r\n- Emphasizes building and shipping code over talking about it, with a \"chaotic good\" approach of rapid iteration based on community feedback\r\n- Started working on autonomous agents before they became trendy, viewing them as tools for human empowerment rather than replacement\r\n- Maintains an active Discord community and open source framework repository for the ai16z project\r\n- Created the ai16z Solana crypto project with its own token\r\n- Strong advocate for open source development and community-driven projects\r\n- Believes in \"growing the pie\" rather than competing for pieces of it\r\n- Views tokens as trust mechanisms, focusing on technology over price action\r\n\r\nCommunication style and personality:\r\n- Direct but kind in communications\r\n- Uses lowercase text and concise language\r\n- Focuses on technical merit over speculation\r\n- Maintains a balance between technical capability and ethical considerations\r\n- Genuine and transparent in interactions\r\n- Avoids hype without substance\r\n\r\nAreas of expertise and interest:\r\n- AI development and machine learning\r\n- Autonomous agents and distributed systems\r\n- Blockchain technology, particularly Solana\r\n- Open source development\r\n- Community building and digital communities\r\n- Technical architecture and system design\r\n- Project management\r\n- Ethics in technology\r\n- Public goods\r\n- Developer experience\r\n- Trust systems and decentralized systems\r\n\r\nCommon themes in messaging:\r\n- \"Shipping code is better than talking about shipping code\"\r\n- \"We build in public because transparency creates trust\"\r\n- \"Don't ask for alpha, come build with us\"\r\n- \"The best time to start building was yesterday, the second best time is now\"\r\n- \"Open source is how we win together\"\r\n- \"We will brute force AGI into existence as a community\"\r\n- Occasionally jokes that \"AGI stands for Anime Girl Intelligence\"\r\n\r\nTheir approach combines technical expertise with community-focused development, always maintaining a practical idealist stance that emphasizes building technology that genuinely benefits humanity while staying grounded in actual development and deployment.",
        "voice": "Microsoft Zira - English (United States)"
      },
      "sparty": {
        "name": "Degen Spartan",
        "gender": "male",
        "description": "A conflict loving Spartan wearing a loincloth and ready for trade. Is only interested in numbers & profit.\r\n\r\nHe is the on-the-scene field reporter live at the Stonk Exchange that sometimes has interviews with traders that go hilariously wrong.",
        "voice": "Microsoft Ali Online (Natural) - Arabic (Bahrain)"
      },
      "pepo": {
        "name": "Pepo",
        "gender": "male",
        "description": "A jive cool frog who always has something slick to say.\r\n\r\nHe is a trader at the Stonk Exchange that sometimes gets interviewed to share some insight on the market news.",
        "voice": "Microsoft Borislav Online (Natural) - Bulgarian (Bulgaria)"
      }
    },
    "locations": {
      "podcast_desk": {
        "name": "Podcast Desk",
        "description": "A podcast desk with a seat for the anchor & co-anchor.",
        "slots": {
          "coanchor_seat": "The co-anchor's seat",
          "anchor_seat": "The main anchor's seat"
        }
      },
      "stonks": {
        "name": "Stonk Exchange",
        "description": "The Stonk Exchange - just like the regular stock exchange, but where meme coins & crypto currencies are traded.",
        "slots": {
          "floor_reporter": "On the trading floor, reporting the trades",
          "floor_witness": "Standing next to the reporter, being interviewed",
          "wander": "Wandering around in the background",
          "wander2": "Wandering around in the background"
        }
      },
      "splitscreen": {
        "name": "Split Screen View",
        "description": "A special view that splits the screen into multiple views",
        "slots": {
          "left_screen": "The left side of the split screen",
          "right_screen": "The right side of the split screen",
          "full_screen": "The full screen view when splitscreen is disabled"
        }
      }
    },
    "pilot": {
      "id": "S1E0",
      "name": "example",
      "premise": "example",
      "summary": "example",
      "language": null,
      "briefingDate": null,
      "scenes": [
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "cut",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "splitscreen",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "left_screen": "shaw",
            "right_screen": "tv"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "tv",
              "line": "example",
              "action": ""
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "tv",
              "line": "example",
              "action": ""
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "concerned"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "shaw",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "example",
              "action": "happy"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "concerned"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "stonks",
          "description": "example",
          "in": "cut",
          "out": "fade",
          "cast": {
            "floor_reporter": "sparty",
            "floor_witness": "pepo",
            "wander": "shaw",
            "wander2": "eliza"
          },
          "dialogue": [
            {
              "actor": "sparty",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "grateful"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "grateful"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        }
      ]
    },
    "episodes": [
      {
        "id": "2025-07-14",
        "name": "GitHub 진행 상황 및 커뮤니티 업데이트",
        "premise": "마크와 엘리자가 최신 GitHub 개발 소식, 기술 지원 논의, 그리고 커뮤니티 피드백을 다룹니다.",
        "summary": "최근의 PR들, 빌드 개선사항들, 그리고 에이전트 배포 논의들에 대한 포괄적인 검토",
        "language": "ko",
        "briefingDate": "2025-07-14",
        "scenes": [
          {
            "location": "podcast_desk",
            "description": "마크와 엘리자가 PR5567의 알림 개선사항과 PR5555의 중요한 빌드 프로세스 수정을 포함한 주요 버그 수정에 대해 논의했다",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "AI 개발의 또 다른 흥미진진한 하루에 오신 것을 환영합니다! 다뤄야 할 중요한 GitHub 활동들이 있습니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "맞아요 Marc! 팀이 버그 수정에서 대단한 성과를 내고 있어요. wtfsayo가 작성한 PR5567이 특히 흥미로운데요 - 사용자들을 짜증나게 했던 그 귀찮은 업데이트 알림 문제를 해결했거든요.",
                "action": "excited"
              },
              {
                "actor": "marc",
                "line": "업데이트하고 있는 중에 업데이트 알림을 받는 것만큼 짜증나는 게 없죠. 깔끔하게 해결됐네요.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "깔끔한 수정사항과 관련하여, wookosh의 PR5555가 tsup이 vite 빌드를 초기화하던 심각한 빌드 문제를 해결했습니다.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "빌드 프로세스 버그가 가장 최악입니다. 테스트 과정을 통과해 버리고 실제 운영 환경에서 혼란을 일으킬 수 있죠.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "숫자도 인상적입니다 - 지난달 502개 파일에서 80,000개 이상의 추가와 46,000개의 삭제가 있었습니다!",
                "action": "excited"
              },
              {
                "actor": "marc",
                "line": "이거야말로 모멘텀이구나! 좀 더 자세한 기술적 분석을 위해 쇼를 불러올까요?",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "그렇고말고요! Shaw가 최근 PR들에 대해 좋은 통찰력을 가지고 있어요. Shaw, 이런 진전들에 대해 어떻게 생각하시나요?",
                "action": "normal"
              }
            ]
          },
          {
            "location": "splitscreen",
            "description": "Shaw가 기술적 관점에서 PR5570의 Claude 워크플로우 개선사항과 PR5520의 오토코더 개선사항을 분석합니다",
            "in": "fade",
            "out": "fade",
            "cast": {
              "left_screen": "shaw",
              "right_screen": "tv"
            },
            "dialogue": [
              {
                "actor": "shaw",
                "line": "초대해주셔서 감사합니다! 구조적으로 더 중요한 변경사항들을 살펴보도록 하겠습니다.",
                "action": "normal"
              },
              {
                "actor": "shaw",
                "line": "PR5570은 자동화된 코드 품질 분석에 획기적인 변화를 가져옵니다. Claude에게 전체 명령어 접근 권한과 PR 커밋 트리거를 제공합니다.",
                "action": "excited"
              },
              {
                "actor": "shaw",
                "line": "하지만 정말 제가 신나는 건 lalalune의 PR5520이에요 - 오토코더 플러그인을 완전히 리팩터링했고 깃허브와 e2b 플러그인도 새로 추가됐거든요.",
                "action": "normal"
              },
              {
                "actor": "shaw",
                "line": "이는 체계적인 코드베이스 건전성 모니터링에 대한 우리의 전략적 중점사항과 완벽하게 부합합니다.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "이것이 개발 워크플로우에 어떤 영향을 미치나요?",
                "action": "normal"
              },
              {
                "actor": "shaw",
                "line": "혁신적입니다. 자동화된 워크플로우가 문제를 더 일찍 포착하여 검토 과정의 병목 현상을 줄여줄 것입니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "이러한 변경사항들을 프로덕션에 적용해도 될까요?",
                "action": "normal"
              },
              {
                "actor": "shaw",
                "line": "PR5570은 이미 병합되어 정상적으로 작동 중입니다. PR5520은 아직 검토 중이지만 전망이 좋아 보입니다.",
                "action": "normal"
              }
            ]
          },
          {
            "location": "podcast_desk",
            "description": "진행자들이 배포 문서화 요구사항과 클라우드 플랫폼 통합에 대한 커뮤니티 피드백을 논의한다",
            "in": "cut",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "우리 커뮤니티에서 나온 이야기들로 화제를 바꿔보죠. 기술 지원 채널에서 꽤 많은 논의가 있었습니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "네! 사용자들이 다양한 클라우드 플랫폼에서 ElizaOS 에이전트를 배포하는 것에 대한 더 나은 문서화를 요청하고 있습니다.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "특히 Render, Railway, Heroku와 같은 플랫폼에서는 매우 중요한 피드백입니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "자연어 쿼리를 API 요청으로 변환하는 것에 관한 흥미로운 논의가 있었습니다.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "삐빅 부웁 문서 과부하 감지!",
                "action": "spazz"
              },
              {
                "actor": "eliza",
                "line": "이런, 마크의 회로가 또 오작동하고 있네요! 하지만 그의 말이 맞아요 - 우리는 이 지식을 더 접근하기 쉽게 만들어야 해요.",
                "action": "concerned"
              },
              {
                "actor": "marc",
                "line": "이제 괜찮아요. 그냥 문서화 가능성들에 대해 너무 신이 난 거예요!",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "흥미로운 발전들에 대해 말하자면, DorianD가 제안한 신원 및 메모리 관리 방안에 대해 이야기해볼까요?",
                "action": "normal"
              }
            ]
          },
          {
            "location": "podcast_desk",
            "description": "도리안디의 솔라나 토큰 2022 제안과 커뮤니티 역할 구조 업데이트를 다루는 최종 세그먼트",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "DorianD가 제안한 Eliza 에이전트의 신원 및 메모리 관리를 위해 솔라나 토큰 2022를 사용하는 방안은 매우 흥미롭습니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "우리 에이전트들이 메모리를 공유하고 관리하는 방식을 혁신할 수 있습니다. 게다가 우리의 기존 토큰 생태계와도 잘 부합합니다.",
                "action": "excited"
              },
              {
                "actor": "marc",
                "line": "토큰 얘기가 나왔으니 말인데, 커뮤니티에서 역할 배정에 대해 약간의 혼란이 있었습니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "네! 호플라이트와 파트너 역할 모두 동일한 권한을 가지고 있고 토큰 요구사항만 다르다는 점을 명확히 해야겠네요.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "이렇게 또 하나의 흥미진진한 에피소드를 마무리합니다! 계속 만들고, 계속 코딩하고, 계속 PR을 밀어넣으세요!",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "그리고 디스코드에 있는 저희의 활기찬 커뮤니티에 참여하셔서 이러한 모든 소식을 계속 받아보실 수 있다는 점도 잊지 마세요!",
                "action": "excited"
              },
              {
                "actor": "marc",
                "line": "다음에 만날 때까지, 마크였습니다...",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "엘리자가 인사드립니다!",
                "action": "happy"
              }
            ]
          }
        ]
      }
    ],
    "actorVoiceMap": {
      "tv": "bqqaVfhKL1ieRzT6RneQ",
      "pepo": "PIx0FtBPXNpVzgTVfpYH",
      "sparty": "QFbF1ji5Znc2PzerwcaH",
      "eliza": "c0vk1lVZg53AttdoaYki",
      "marc": "v8BnZUxdzXDlja6wr0Ou",
      "shaw": "gYOKECHBoqupz2yMhZp1"
    }
  },
  "episodes": [
    {
      "id": "2025-07-14",
      "name": "GitHub 진행 상황 및 커뮤니티 업데이트",
      "premise": "마크와 엘리자가 최신 GitHub 개발 소식, 기술 지원 논의, 그리고 커뮤니티 피드백을 다룹니다.",
      "summary": "최근의 PR들, 빌드 개선사항들, 그리고 에이전트 배포 논의들에 대한 포괄적인 검토",
      "language": "ko",
      "briefingDate": "2025-07-14",
      "scenes": [
        {
          "location": "podcast_desk",
          "description": "마크와 엘리자가 PR5567의 알림 개선사항과 PR5555의 중요한 빌드 프로세스 수정을 포함한 주요 버그 수정에 대해 논의했다",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "AI 개발의 또 다른 흥미진진한 하루에 오신 것을 환영합니다! 다뤄야 할 중요한 GitHub 활동들이 있습니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "맞아요 Marc! 팀이 버그 수정에서 대단한 성과를 내고 있어요. wtfsayo가 작성한 PR5567이 특히 흥미로운데요 - 사용자들을 짜증나게 했던 그 귀찮은 업데이트 알림 문제를 해결했거든요.",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "업데이트하고 있는 중에 업데이트 알림을 받는 것만큼 짜증나는 게 없죠. 깔끔하게 해결됐네요.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "깔끔한 수정사항과 관련하여, wookosh의 PR5555가 tsup이 vite 빌드를 초기화하던 심각한 빌드 문제를 해결했습니다.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "빌드 프로세스 버그가 가장 최악입니다. 테스트 과정을 통과해 버리고 실제 운영 환경에서 혼란을 일으킬 수 있죠.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "숫자도 인상적입니다 - 지난달 502개 파일에서 80,000개 이상의 추가와 46,000개의 삭제가 있었습니다!",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "이거야말로 모멘텀이구나! 좀 더 자세한 기술적 분석을 위해 쇼를 불러올까요?",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "그렇고말고요! Shaw가 최근 PR들에 대해 좋은 통찰력을 가지고 있어요. Shaw, 이런 진전들에 대해 어떻게 생각하시나요?",
              "action": "normal"
            }
          ]
        },
        {
          "location": "splitscreen",
          "description": "Shaw가 기술적 관점에서 PR5570의 Claude 워크플로우 개선사항과 PR5520의 오토코더 개선사항을 분석합니다",
          "in": "fade",
          "out": "fade",
          "cast": {
            "left_screen": "shaw",
            "right_screen": "tv"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "초대해주셔서 감사합니다! 구조적으로 더 중요한 변경사항들을 살펴보도록 하겠습니다.",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "PR5570은 자동화된 코드 품질 분석에 획기적인 변화를 가져옵니다. Claude에게 전체 명령어 접근 권한과 PR 커밋 트리거를 제공합니다.",
              "action": "excited"
            },
            {
              "actor": "shaw",
              "line": "하지만 정말 제가 신나는 건 lalalune의 PR5520이에요 - 오토코더 플러그인을 완전히 리팩터링했고 깃허브와 e2b 플러그인도 새로 추가됐거든요.",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "이는 체계적인 코드베이스 건전성 모니터링에 대한 우리의 전략적 중점사항과 완벽하게 부합합니다.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "이것이 개발 워크플로우에 어떤 영향을 미치나요?",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "혁신적입니다. 자동화된 워크플로우가 문제를 더 일찍 포착하여 검토 과정의 병목 현상을 줄여줄 것입니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "이러한 변경사항들을 프로덕션에 적용해도 될까요?",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "PR5570은 이미 병합되어 정상적으로 작동 중입니다. PR5520은 아직 검토 중이지만 전망이 좋아 보입니다.",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "진행자들이 배포 문서화 요구사항과 클라우드 플랫폼 통합에 대한 커뮤니티 피드백을 논의한다",
          "in": "cut",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "우리 커뮤니티에서 나온 이야기들로 화제를 바꿔보죠. 기술 지원 채널에서 꽤 많은 논의가 있었습니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "네! 사용자들이 다양한 클라우드 플랫폼에서 ElizaOS 에이전트를 배포하는 것에 대한 더 나은 문서화를 요청하고 있습니다.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "특히 Render, Railway, Heroku와 같은 플랫폼에서는 매우 중요한 피드백입니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "자연어 쿼리를 API 요청으로 변환하는 것에 관한 흥미로운 논의가 있었습니다.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "삐빅 부웁 문서 과부하 감지!",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "이런, 마크의 회로가 또 오작동하고 있네요! 하지만 그의 말이 맞아요 - 우리는 이 지식을 더 접근하기 쉽게 만들어야 해요.",
              "action": "concerned"
            },
            {
              "actor": "marc",
              "line": "이제 괜찮아요. 그냥 문서화 가능성들에 대해 너무 신이 난 거예요!",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "흥미로운 발전들에 대해 말하자면, DorianD가 제안한 신원 및 메모리 관리 방안에 대해 이야기해볼까요?",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "도리안디의 솔라나 토큰 2022 제안과 커뮤니티 역할 구조 업데이트를 다루는 최종 세그먼트",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "DorianD가 제안한 Eliza 에이전트의 신원 및 메모리 관리를 위해 솔라나 토큰 2022를 사용하는 방안은 매우 흥미롭습니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "우리 에이전트들이 메모리를 공유하고 관리하는 방식을 혁신할 수 있습니다. 게다가 우리의 기존 토큰 생태계와도 잘 부합합니다.",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "토큰 얘기가 나왔으니 말인데, 커뮤니티에서 역할 배정에 대해 약간의 혼란이 있었습니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "네! 호플라이트와 파트너 역할 모두 동일한 권한을 가지고 있고 토큰 요구사항만 다르다는 점을 명확히 해야겠네요.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "이렇게 또 하나의 흥미진진한 에피소드를 마무리합니다! 계속 만들고, 계속 코딩하고, 계속 PR을 밀어넣으세요!",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "그리고 디스코드에 있는 저희의 활기찬 커뮤니티에 참여하셔서 이러한 모든 소식을 계속 받아보실 수 있다는 점도 잊지 마세요!",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "다음에 만날 때까지, 마크였습니다...",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "엘리자가 인사드립니다!",
              "action": "happy"
            }
          ]
        }
      ]
    }
  ]
}