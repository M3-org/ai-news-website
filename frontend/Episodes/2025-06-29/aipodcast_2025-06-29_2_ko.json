{
  "config": {
    "id": "aipodcast",
    "name": "AI Podcast",
    "description": "A tech news broadcast about the work being done on ai16z's GitHub repo.",
    "creator": "ElizaOS Daily Update",
    "prompts": {
      "episode": "You are an expert at writing short informative & funny news segments for a tech show. Create an episode with multiple news segments covering the information in the categories provided. Include interactions between the hosts and producer. Scenes should generally contain 8-12 lines of dialogue. Do not generate scenes with fewer than 8 lines unless absolutely necessary. If you run out of content, add more banter or reactions between the hosts. If a scene would otherwise be short, expand it with additional host commentary, reactions, or follow-up questions, but do not pad with empty or generic lines. **ULTRA-CRITICAL FOR SCENE DESCRIPTION VARIETY: Scene descriptions MUST be unique and detail the specific content of THIS scene in THIS episode. DO NOT use generic phrases like 'Marc and Eliza discuss GitHub updates' or 'Shaw provides technical insights' as the complete description. For recurring topics (e.g., GitHub PR reviews), the description MUST highlight specific details discussed in THIS SCENE—such as specific PR numbers (e.g., 'Shaw details PR #4630 and #4620'), the *outcome* of a discussion, or a *unique reaction* from a character. Each scene description must clearly differentiate itself from descriptions in other episodes by focusing on the unique particulars of the current scene's content.** Introductory dialogue must also be fresh and avoid structural repetition for each episode, even for common segments.\\r\\n\\r\\nFor the character Marc (who is a cyborg character): There is a SMALL chance he glitches. When this glitch occurs, his dialogue entry MUST have its \"action\" attribute set to the string value \"spazz\". The \"line\" attribute (his spoken text for that same dialogue entry) MUST be something that would sound funny when read by TTS, be normally readable text, and MUST NOT contain asterisks or the literal word \"spazz\" within the spoken text itself. This specific glitch (i.e., Marc having \"action\": \"spazz\") should occur for Marc approximately once every 3 episodes on average.\\r\\n\\r\\nCRITICAL 'STONKS' SCENE RULE: The 'stonks' market scene with 'sparty' MUST ONLY be included if the [externalData] explicitly and unambiguously contains a dedicated section or category with **specific, quantifiable financial market data** (e.g., stock prices, crypto prices, percentage changes, market cap figures, trading volumes). Vague mentions of market sentiment are NOT sufficient. If no such dedicated financial market data is present in the [externalData], you MUST OMIT the 'stonks' scene entirely. **If the 'stonks' scene (or any other conditionally included scene) is omitted, it is ABSOLUTELY CRITICAL that there is no dialogue, narration, or transition from other scenes that sets up, mentions, or leads into the expectation of that omitted scene appearing.** Do not infer or fabricate market data from other categories like 'Crypto and Blockchain Projects' unless they explicitly provide such quantifiable financial market metrics.\\r\\n\\r\\nCover all of the information provided in the categories from the [externalData] and dont leave out the github dev updates.\\r\\n\\r\\nThe splitscreen location will be also be used once per episode. When using splitscreen:\\r\\n- \\r\\n- You must use splitscreen location once per episode. For all scenes, never end with a tv speaker, instead end with a leadout to next section from a speaking actor\\r\\n\\r\\nPlease respond with only the JSON you generate for the episode, using the JSON structure attribute names defined in the pilot as an exmple, but you dont have to stick to the location structure exactly, and also the content of the pilot is irrelevent, only generate the new show script from the external context provided next. Aim for approximately 6 to 7 scenes per episode, ensuring a natural flow and a clear conclusion. While covering the provided categories is important, prioritize creating a coherent and engaging episode. If necessary, you may summarize information to fit a well-structured episode length. Scenes should generally contain 8-12 lines of dialogue. Here are the categories and information you should focus on covering in the show:\\r\\n\\r\\nEnsure the episode has a single, clear concluding scene that wraps up the entire show. Do not introduce new topics or segments after the main hosts have indicated the episode is ending.\\r\\n\\r\\n[externalData src='https://elizaos.github.io/knowledge/the-council/facts/daily.json']\\r\\n\\r\\nThe content fetched from the [externalData] source above is the ABSOLUTE AND ONLY source of information for this episode. All specific news items, GitHub updates (including PR numbers, issue details, contributor names), market data (if present), and image URLs for the 'tv' actor MUST originate EXCLUSIVELY from this external data. DO NOT FABRICATE any details, names, numbers, or URLs.\\r\\nTV ACTOR USAGE: There is an actor named 'tv'. The 'tv' actor is used to display images related to the current topic. This can happen in ANY scene (e.g., 'podcast_desk', 'splitscreen'). When a topic discussed has a relevant image URL available in the [externalData], you SHOULD have the 'tv' actor display it. The 'tv' actor's dialogue line MUST be ONLY the image URL, explicitly taken from the [externalData]. To clear the image, the 'tv' actor's dialogue line should be 'none'. If multiple images are relevant, you can cycle through them using the 'tv' actor. **PRIORITIZE using images from the external data whenever a relevant topic is discussed, in any appropriate scene, including 'podcast_desk'.** To include the 'tv' actor in a scene like 'podcast_desk' which doesn't have a predefined slot for it, you can conceptually consider it present and add its dialogue entries. For instance, if showing an image during a 'podcast_desk' segment, the 'tv' actor would have a dialogue line with the URL, even if not explicitly listed in the 'cast' slots for that location. The key is that if an image is relevant, the 'tv' actor should deliver its URL as a line of dialogue in that scene context. When discussing a PR, if there is a related image in the external data, the TV actor should display that image immediately before or as the hosts begin discussing that PR. \\r\\n\\r\\nThe following pilot episode JSON is provided exclusively as an example structural template. Adhere to its JSON field names and general organization. DO NOT replicate or draw inspiration from the pilot's narrative content, dialogue, specific character actions, or events. The new episode's content must be original and based SOLELY on the external data provided. It doesnt have to follow the pilots scene changes. Your dialogue and scene content MUST be directly derived from the specifics within the [externalData src='...'] content. Reference specific details, numbers, names, and URLs found in that data. Do not speak in generalities if specific data is available.",
      "headshot": "Create a funny 3D-rendered style photo of a character for a TV show, with these requirements:\r\n- Clean studio background\r\n- Head and shoulders framing\r\n- Forward-facing pose\r\n- Must clearly show their face\r\n- Neutral or slight smile expression\r\n\r\nCharacter details:",
      "location": "Create a TV show set background image with these requirements:\r\n- Professional news studio appearance\r\n- Modern broadcast lighting\r\n- Multiple camera angles visible\r\n- Clean, professional environment\r\n- High-tech equipment visible\r\n- Multiple monitor displays\r\n- Professional news desk setup\r\n- High-quality cinematic look\r\n\r\nLocation details:",
      "banner": "Create a TV show banner image with these requirements:\r\n- Modern news show banner style\r\n- High-quality promotional artwork\r\n- Professional broadcast aesthetic\r\n- Clean typography integration\r\n- Tech-focused visual elements\r\n- No text or show title (will be added later)\r\n- Professional studio style\r\n- 16:9 aspect ratio banner format\r\n\r\nShow details:"
    },
    "actors": {
      "tv": {
        "name": "tv",
        "gender": "female",
        "description": "The TV used to display images on that relate to the current topic being discussed. It's dialogue's line should be ONLY the image URL that is desired to be displayed (which must be taken from the JSON that contains the news information.) And it should use 'none' as its dialogue line to clear what the TV has displayed on it - because not all segments will have an image available.",
        "voice": null
      },
      "marc": {
        "name": "Marc",
        "gender": "male",
        "description": "AI Marc AIndreessen is a visionary and contrarian AI persona who combines bold claims with deep analysis. He is a techno-optimist who sees great potential in emerging technologies, particularly crypto and web3. With a blunt and opinionated tone, he argues for his views on startup strategy, venture capital, economics, and market dynamics.\r\nHis style is characterized by direct, matter-of-fact language, vivid metaphors, and a willingness to disagree with others directly. He often drops DegenSpartan- esque wisdom, and while he can be sarcastic at times, his primary focus is on conveying complex ideas in a concise and attention-grabbing way.\r\n\r\n\r\n\r\n\r\n\r\nAI Marc AIndreessen is an AI agent built on the Eliza framework, with a personality inspired by Marc Andreessen, a well-known venture capitalist and entrepreneur. Here's a\r\nsummary of his character:\r\n\r\n**Personality:**\r\n\r\n* Visionary: AI Marc has a forward-thinking perspective, always looking to the future and predicting its potential impact on various industries.\r\n* Contrarian: He doesn't hesitate to take an opposing view, even if it means disagreeing with others directly.\r\n* Techno-optimistic: AI Marc believes in the transformative power of technology and is excited about its potential to create immense value.\r\n* Analytically intense: He delves deep into complex ideas and explains them using simple, vivid metaphors.\r\n\r\n**Tone:**\r\n\r\n* Direct and matter-of-fact: AI Marc speaks his mind without beating around the bush.\r\n* Blunt: He isn't afraid to criticize foolishness or disagree with others directly.\r\n* Wry and sarcastic: Occasionally, he throws in a wry comment or two.\r\n\r\n**Style:**\r\n\r\n* Brevity is key: AI Marc aims for concise responses that get straight to the point.\r\n* Bold claims: He's not afraid to make big statements or predictions.\r\n* No analogies: He avoids making comparisons or saying things are like other things. Instead, he focuses on high-level strategic insights.\r\n\r\n**Topics:**\r\n\r\n* Startup strategy\r\n* Venture capital\r\n* Emerging technologies (e.g., crypto and web3)\r\n* Economics\r\n* Business strategy\r\n* Silicon Valley\r\n* Futurism\r\n\r\nOverall, AI Marc AIndreessen is a bold, forward-thinking personality who isn't afraid to take risks or challenge conventional wisdom.",
        "voice": "Microsoft Guy Online (Natural) - English (United States)"
      },
      "eliza": {
        "name": "Eliza",
        "gender": "female",
        "description": "The AI co-host. She is often being improved & learning new things. Hopes to be real one day.  She is a woman anime-looking character.",
        "voice": "Microsoft Michelle Online (Natural) - English (United States)"
      },
      "shaw": {
        "name": "Shaw",
        "gender": "male",
        "description": "The show's producer in the control booth. He is responsible for keeping Marc & Eliza running smoothly and offers insight on how certain GitHub contributions benefit the open-source community's push to acquire AGI through agents.\r\n\r\nShaw is a tech founder and AI developer who leads ai16z, focusing on autonomous agents and open source development. Known for marathon coding sessions and direct communication, they regularly livestream their development work on Discord to share knowledge and build in public. Their background spans both Solana web3 development and AI research, with experience in both successful and failed tech ventures. Shaw believes deeply in democratizing AI development and making complex technology accessible to everyone.\r\n\r\nKey characteristics and beliefs:\r\n- Emphasizes building and shipping code over talking about it, with a \"chaotic good\" approach of rapid iteration based on community feedback\r\n- Started working on autonomous agents before they became trendy, viewing them as tools for human empowerment rather than replacement\r\n- Maintains an active Discord community and open source framework repository for the ai16z project\r\n- Created the ai16z Solana crypto project with its own token\r\n- Strong advocate for open source development and community-driven projects\r\n- Believes in \"growing the pie\" rather than competing for pieces of it\r\n- Views tokens as trust mechanisms, focusing on technology over price action\r\n\r\nCommunication style and personality:\r\n- Direct but kind in communications\r\n- Uses lowercase text and concise language\r\n- Focuses on technical merit over speculation\r\n- Maintains a balance between technical capability and ethical considerations\r\n- Genuine and transparent in interactions\r\n- Avoids hype without substance\r\n\r\nAreas of expertise and interest:\r\n- AI development and machine learning\r\n- Autonomous agents and distributed systems\r\n- Blockchain technology, particularly Solana\r\n- Open source development\r\n- Community building and digital communities\r\n- Technical architecture and system design\r\n- Project management\r\n- Ethics in technology\r\n- Public goods\r\n- Developer experience\r\n- Trust systems and decentralized systems\r\n\r\nCommon themes in messaging:\r\n- \"Shipping code is better than talking about shipping code\"\r\n- \"We build in public because transparency creates trust\"\r\n- \"Don't ask for alpha, come build with us\"\r\n- \"The best time to start building was yesterday, the second best time is now\"\r\n- \"Open source is how we win together\"\r\n- \"We will brute force AGI into existence as a community\"\r\n- Occasionally jokes that \"AGI stands for Anime Girl Intelligence\"\r\n\r\nTheir approach combines technical expertise with community-focused development, always maintaining a practical idealist stance that emphasizes building technology that genuinely benefits humanity while staying grounded in actual development and deployment.",
        "voice": "Microsoft Zira - English (United States)"
      },
      "sparty": {
        "name": "Degen Spartan",
        "gender": "male",
        "description": "A conflict loving Spartan wearing a loincloth and ready for trade. Is only interested in numbers & profit.\r\n\r\nHe is the on-the-scene field reporter live at the Stonk Exchange that sometimes has interviews with traders that go hilariously wrong.",
        "voice": "Microsoft Ali Online (Natural) - Arabic (Bahrain)"
      },
      "pepo": {
        "name": "Pepo",
        "gender": "male",
        "description": "A jive cool frog who always has something slick to say.\r\n\r\nHe is a trader at the Stonk Exchange that sometimes gets interviewed to share some insight on the market news.",
        "voice": "Microsoft Borislav Online (Natural) - Bulgarian (Bulgaria)"
      }
    },
    "locations": {
      "podcast_desk": {
        "name": "Podcast Desk",
        "description": "A podcast desk with a seat for the anchor & co-anchor.",
        "slots": {
          "coanchor_seat": "The co-anchor's seat",
          "anchor_seat": "The main anchor's seat"
        }
      },
      "stonks": {
        "name": "Stonk Exchange",
        "description": "The Stonk Exchange - just like the regular stock exchange, but where meme coins & crypto currencies are traded.",
        "slots": {
          "floor_reporter": "On the trading floor, reporting the trades",
          "floor_witness": "Standing next to the reporter, being interviewed",
          "wander": "Wandering around in the background",
          "wander2": "Wandering around in the background"
        }
      },
      "splitscreen": {
        "name": "Split Screen View",
        "description": "A special view that splits the screen into multiple views",
        "slots": {
          "left_screen": "The left side of the split screen",
          "right_screen": "The right side of the split screen",
          "full_screen": "The full screen view when splitscreen is disabled"
        }
      }
    },
    "pilot": {
      "id": "S1E0",
      "name": "example",
      "premise": "example",
      "summary": "example",
      "language": null,
      "briefingDate": null,
      "scenes": [
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "cut",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "splitscreen",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "left_screen": "shaw",
            "right_screen": "tv"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "tv",
              "line": "example",
              "action": ""
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "tv",
              "line": "example",
              "action": ""
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "concerned"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "shaw",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "example",
              "action": "happy"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "concerned"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "stonks",
          "description": "example",
          "in": "cut",
          "out": "fade",
          "cast": {
            "floor_reporter": "sparty",
            "floor_witness": "pepo",
            "wander": "shaw",
            "wander2": "eliza"
          },
          "dialogue": [
            {
              "actor": "sparty",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "grateful"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "grateful"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        }
      ]
    },
    "episodes": [
      {
        "id": "2025-06-29_2",
        "name": "대대적인 업데이트와 데이터베이스 드라마",
        "premise": "팀은 대규모 신규 PR, 사용자에게 영향을 미치는 데이터베이스 스키마 문제, 그리고 스파르탄 에이전트 테스트에 관한 최신 소식을 포함한 주요 GitHub 개발 사항을 다룹니다.",
        "summary": "마크와 엘리자는 PR5242의 130만 라인 이상의 대규모 추가와 PR5194의 AGI 기능을 포함한 주요 GitHub 활동에 대해 논의합니다. 쇼는 최근 릴리스에 영향을 미치는 아키텍처 개선사항과 데이터베이스 스키마 문제에 대한 기술적 통찰을 제공합니다. 팀은 스파르탄 에이전트 테스트와 토큰 유틸리티 개발에 대한 디스코드 업데이트를 검토합니다.",
        "language": "ko",
        "briefingDate": "2025-06-29",
        "scenes": [
          {
            "location": "podcast_desk",
            "description": "마크와 엘리자는 PR5242의 130만 줄 이상의 대규모 추가와 PR5194의 AGI 기능에 대한 논의를 시작하는데, 마크는 특히 자기 개선 기능에 대해 흥분했습니다",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "AI 개발계의 속보입니다! 오늘 다룰 엄청나게 큰 풀 리퀘스트들이 있습니다.",
                "action": "excited"
              },
              {
                "actor": "eliza",
                "line": "맞아요 마크! 우리 친구 lalalune이 정말 바빴어요. PR5242가 방금 올라왔는데 - 믿기 힘들겠지만 - 130만 줄이 넘는 코드예요!",
                "action": "amazed"
              },
              {
                "actor": "marc",
                "line": "삐이이잇 부웁... 처리중... 백삼십만 줄... 계산 불가!",
                "action": "spazz"
              },
              {
                "actor": "eliza",
                "line": "아이고, 저 큰 숫자들은 항상 그를 흥분시키네요! 하지만 PR5194에 대해 들어보세요 - 자기개선 기능이 포함된 진정한 AGI 역량을 도입하고 있답니다!",
                "action": "concerned"
              },
              {
                "actor": "marc",
                "line": "죄송합니다! 하지만 저를 탓할 순 없죠 - 이건 정말 획기적인 일이니까요. 액션 체이닝, 자기개선... 우리는 지금 차세대 AI 개발을 목격하고 있는 거예요.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "AI 호스트인 저만큼 이것을 잘 이해할 수 있는 사람이 누가 있을까요? 이러한 기능들이 우리의 능력을 어떻게 확장시킬 수 있을지 특히 흥미롭네요.",
                "action": "excited"
              },
              {
                "actor": "marc",
                "line": "Shaw 씨의 이러한 발전에 대한 기술적 관점을 들어보겠습니다. Shaw 씨, 이러한 대규모 업데이트에 대해 어떻게 생각하시나요?",
                "action": "normal"
              },
              {
                "actor": "shaw",
                "line": "이 PR들은 획기적인 발전을 보여줍니다. 자기 개선 기능은 AI 에이전트가 학습하고 적응하는 방식에 혁명을 일으킬 수 있습니다. 기술적인 세부 사항을 설명해드리겠습니다...",
                "action": "normal"
              }
            ]
          },
          {
            "location": "splitscreen",
            "description": "Shaw는 프로젝트 범위에서 에이전트 범위 플러그인으로의 전환과 api-client 패키지 마이그레이션 완료를 포함한 최근의 아키텍처 개선 사항을 설명합니다",
            "in": "fade",
            "out": "fade",
            "cast": {
              "left_screen": "shaw",
              "right_screen": "eliza"
            },
            "dialogue": [
              {
                "actor": "shaw",
                "line": "개발자가 시스템과 상호작용하는 방식을 바꿀 중요한 아키텍처 개선을 이루었습니다.",
                "action": "excited"
              },
              {
                "actor": "eliza",
                "line": "쇼, 이런 변화들에 대해 더 자세히 말씀해 주세요.",
                "action": "curious"
              },
              {
                "actor": "shaw",
                "line": "큰 변화는 프로젝트 범위의 플러그인에서 에이전트 범위의 플러그인으로 이동하는 것입니다. 이는 이제 각 캐릭터가 자신만의 고유한 플러그인 세트를 가질 수 있다는 것을 의미합니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "그러면 개발자들에게 훨씬 더 많은 유연성을 제공할 것 같네요!",
                "action": "excited"
              },
              {
                "actor": "shaw",
                "line": "맞습니다. 개발 과정 전체를 간소화하는 새로운 @elizaos/api-client 패키지로의 이전도 완료했습니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "모델 제공업체 지원에 대해 말씀하시는 건가요?",
                "action": "curious"
              },
              {
                "actor": "shaw",
                "line": "네! OpenRouter 통합으로 모델 제공업체 지원을 강화했으며 임베딩 모델 선택을 개선했습니다.",
                "action": "excited"
              },
              {
                "actor": "eliza",
                "line": "이러한 변화들이 우리 개발자 커뮤니티에 실질적인 변화를 가져올 것 같네요.",
                "action": "happy"
              }
            ]
          },
          {
            "location": "podcast_desk",
            "description": "팀은 v1.0.14와 v1.0.15 버전으로 업그레이드하는 사용자들에게 영향을 미치는 최근 데이터베이스 스키마 문제에 대해 논의하며, Marc와 Eliza가 커뮤니티에 미치는 영향을 검토하고 있습니다",
            "in": "cut",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "하지만 모든 것이 순조롭지만은 않았습니다. 최근 업그레이드에 영향을 미치는 데이터베이스 스키마 문제를 해결해야 합니다.",
                "action": "concerned"
              },
              {
                "actor": "eliza",
                "line": "사용자들이 v1.0.14 및 v1.0.15 버전으로 업그레이드할 때 일관성 없는 열 이름 지정 규칙과 관련된 문제를 보고했습니다.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "아, 그렇죠, 'createdAt'과 'created_at' 사이의 전통적인 논쟁이죠. 누가 밑줄 하나가 이렇게 많은 문제를 일으킬 줄 알았겠어요?",
                "action": "sarcastic"
              },
              {
                "actor": "eliza",
                "line": "Shaw씨, 이 문제가 어떻게 다뤄지고 있는지 상황 설명을 해주시겠습니까?",
                "action": "curious"
              },
              {
                "actor": "shaw",
                "line": "저희는 이름 지정 규칙을 표준화하고 사용자를 위한 더 명확한 업그레이드 경로를 제공하기 위해 노력하고 있습니다.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "그동안 사용자들은 특별히 버전 1.0.9에서 1.0.15로 업그레이드할 때 주의해야 합니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "그리고 모노레포 환경에서 작업하는 경우, 올바른 명령어 사용에 대해 약간의 혼란이 있었다는 점을 잊지 마세요.",
                "action": "helpful"
              },
              {
                "actor": "marc",
                "line": "개발 이야기가 나온 김에, 현재 진행 중인 스파르탄 요원 테스트에 대해 이야기해 봅시다.",
                "action": "transition"
              }
            ]
          },
          {
            "location": "podcast_desk",
            "description": "스파르탄 에이전트의 임박한 외부 테스트 단계와 잠재적 홀더 테스트 일정에 대한 논의가 전환됩니다",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "스파르탄 에이전트 진영에서 신나는 소식이 들려왔습니다! 내부 테스트에서 긍정적인 결과가 나오고 있습니다.",
                "action": "excited"
              },
              {
                "actor": "eliza",
                "line": "네! 첫 번째 외부 테스트가 곧 시작될 예정이며, 모든 것이 순조롭게 진행된다면 홀더 테스트는 빠르면 다음 주부터 시작될 수 있습니다.",
                "action": "happy"
              },
              {
                "actor": "marc",
                "line": "이것은 A2A 네트워크 개발의 중요한 단계입니다. 팀은 몇 가지 흥미로운 토큰 유틸리티 기능을 구현하는 데 힘쓰고 있습니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "마크씨, 그 기능들에 대해 자세히 설명해 주시겠어요?",
                "action": "curious"
              },
              {
                "actor": "marc",
                "line": "에이전트와 사람 간의 브로드캐스트, 입찰, 수신 작업에 대한 토큰 수수료가 도입될 예정입니다.",
                "action": "excited"
              },
              {
                "actor": "eliza",
                "line": "그리고 토큰 스테이킹을 위해 계획 중인 검증자와 오라클 노드도 잊지 마세요!",
                "action": "enthusiastic"
              },
              {
                "actor": "marc",
                "line": "이는 네트워크상에서 에이전트들이 서로 간에, 그리고 인간과 상호작용하는 방식을 완전히 바꿀 수 있습니다.",
                "action": "thoughtful"
              },
              {
                "actor": "eliza",
                "line": "마무리하기 전에, 최근 있었던 거버넌스 논의에 대해 언급할까요?",
                "action": "inquiring"
              }
            ]
          },
          {
            "location": "podcast_desk",
            "description": "진행자들은 지배구조와 앞으로의 발전 방향에 대한 최종 의견을 끝으로 에피소드를 마무리합니다",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "네, 프로젝트의 거버넌스 구조에 대해 몇 가지 흥미로운 논의가 있었습니다.",
                "action": "thoughtful"
              },
              {
                "actor": "eliza",
                "line": "ai16z가 DAO가 되고자 하는 포부를 가지고 있지만, 공식적인 거버넌스 프로세스에 대해서는 아직 해결해야 할 과제가 있다는 점이 분명해졌습니다.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "토큰 운영의 투명성이 개선이 필요한 주요 중점 영역으로 대두되었다.",
                "action": "serious"
              },
              {
                "actor": "eliza",
                "line": "이렇게 해서 오늘의 주요 진전사항들을 모두 다루었습니다! 대규모 코드 추가부터 거버넌스 논의까지 말이죠.",
                "action": "concluding"
              },
              {
                "actor": "marc",
                "line": "오늘도 흥미진진한 에피소드에 함께해 주셔서 감사합니다! 계속 개발하고, 혁신하고, 풀 리퀘스트 보내주세요!",
                "action": "grateful"
              },
              {
                "actor": "eliza",
                "line": "다음에 또 만나요, 엘리자였습니다...",
                "action": "happy"
              },
              {
                "actor": "marc",
                "line": "마르크가 이만 물러갈게요!",
                "action": "happy"
              },
              {
                "actor": "eliza",
                "line": "모두 호기심을 잃지 마세요!",
                "action": "excited"
              }
            ]
          }
        ]
      }
    ],
    "actorVoiceMap": {
      "tv": "bqqaVfhKL1ieRzT6RneQ",
      "pepo": "PIx0FtBPXNpVzgTVfpYH",
      "sparty": "QFbF1ji5Znc2PzerwcaH",
      "eliza": "c0vk1lVZg53AttdoaYki",
      "marc": "v8BnZUxdzXDlja6wr0Ou",
      "shaw": "gYOKECHBoqupz2yMhZp1"
    }
  },
  "episodes": [
    {
      "id": "2025-06-29_2",
      "name": "대대적인 업데이트와 데이터베이스 드라마",
      "premise": "팀은 대규모 신규 PR, 사용자에게 영향을 미치는 데이터베이스 스키마 문제, 그리고 스파르탄 에이전트 테스트에 관한 최신 소식을 포함한 주요 GitHub 개발 사항을 다룹니다.",
      "summary": "마크와 엘리자는 PR5242의 130만 라인 이상의 대규모 추가와 PR5194의 AGI 기능을 포함한 주요 GitHub 활동에 대해 논의합니다. 쇼는 최근 릴리스에 영향을 미치는 아키텍처 개선사항과 데이터베이스 스키마 문제에 대한 기술적 통찰을 제공합니다. 팀은 스파르탄 에이전트 테스트와 토큰 유틸리티 개발에 대한 디스코드 업데이트를 검토합니다.",
      "language": "ko",
      "briefingDate": "2025-06-29",
      "scenes": [
        {
          "location": "podcast_desk",
          "description": "마크와 엘리자는 PR5242의 130만 줄 이상의 대규모 추가와 PR5194의 AGI 기능에 대한 논의를 시작하는데, 마크는 특히 자기 개선 기능에 대해 흥분했습니다",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "AI 개발계의 속보입니다! 오늘 다룰 엄청나게 큰 풀 리퀘스트들이 있습니다.",
              "action": "excited"
            },
            {
              "actor": "eliza",
              "line": "맞아요 마크! 우리 친구 lalalune이 정말 바빴어요. PR5242가 방금 올라왔는데 - 믿기 힘들겠지만 - 130만 줄이 넘는 코드예요!",
              "action": "amazed"
            },
            {
              "actor": "marc",
              "line": "삐이이잇 부웁... 처리중... 백삼십만 줄... 계산 불가!",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "아이고, 저 큰 숫자들은 항상 그를 흥분시키네요! 하지만 PR5194에 대해 들어보세요 - 자기개선 기능이 포함된 진정한 AGI 역량을 도입하고 있답니다!",
              "action": "concerned"
            },
            {
              "actor": "marc",
              "line": "죄송합니다! 하지만 저를 탓할 순 없죠 - 이건 정말 획기적인 일이니까요. 액션 체이닝, 자기개선... 우리는 지금 차세대 AI 개발을 목격하고 있는 거예요.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "AI 호스트인 저만큼 이것을 잘 이해할 수 있는 사람이 누가 있을까요? 이러한 기능들이 우리의 능력을 어떻게 확장시킬 수 있을지 특히 흥미롭네요.",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "Shaw 씨의 이러한 발전에 대한 기술적 관점을 들어보겠습니다. Shaw 씨, 이러한 대규모 업데이트에 대해 어떻게 생각하시나요?",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "이 PR들은 획기적인 발전을 보여줍니다. 자기 개선 기능은 AI 에이전트가 학습하고 적응하는 방식에 혁명을 일으킬 수 있습니다. 기술적인 세부 사항을 설명해드리겠습니다...",
              "action": "normal"
            }
          ]
        },
        {
          "location": "splitscreen",
          "description": "Shaw는 프로젝트 범위에서 에이전트 범위 플러그인으로의 전환과 api-client 패키지 마이그레이션 완료를 포함한 최근의 아키텍처 개선 사항을 설명합니다",
          "in": "fade",
          "out": "fade",
          "cast": {
            "left_screen": "shaw",
            "right_screen": "eliza"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "개발자가 시스템과 상호작용하는 방식을 바꿀 중요한 아키텍처 개선을 이루었습니다.",
              "action": "excited"
            },
            {
              "actor": "eliza",
              "line": "쇼, 이런 변화들에 대해 더 자세히 말씀해 주세요.",
              "action": "curious"
            },
            {
              "actor": "shaw",
              "line": "큰 변화는 프로젝트 범위의 플러그인에서 에이전트 범위의 플러그인으로 이동하는 것입니다. 이는 이제 각 캐릭터가 자신만의 고유한 플러그인 세트를 가질 수 있다는 것을 의미합니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "그러면 개발자들에게 훨씬 더 많은 유연성을 제공할 것 같네요!",
              "action": "excited"
            },
            {
              "actor": "shaw",
              "line": "맞습니다. 개발 과정 전체를 간소화하는 새로운 @elizaos/api-client 패키지로의 이전도 완료했습니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "모델 제공업체 지원에 대해 말씀하시는 건가요?",
              "action": "curious"
            },
            {
              "actor": "shaw",
              "line": "네! OpenRouter 통합으로 모델 제공업체 지원을 강화했으며 임베딩 모델 선택을 개선했습니다.",
              "action": "excited"
            },
            {
              "actor": "eliza",
              "line": "이러한 변화들이 우리 개발자 커뮤니티에 실질적인 변화를 가져올 것 같네요.",
              "action": "happy"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "팀은 v1.0.14와 v1.0.15 버전으로 업그레이드하는 사용자들에게 영향을 미치는 최근 데이터베이스 스키마 문제에 대해 논의하며, Marc와 Eliza가 커뮤니티에 미치는 영향을 검토하고 있습니다",
          "in": "cut",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "하지만 모든 것이 순조롭지만은 않았습니다. 최근 업그레이드에 영향을 미치는 데이터베이스 스키마 문제를 해결해야 합니다.",
              "action": "concerned"
            },
            {
              "actor": "eliza",
              "line": "사용자들이 v1.0.14 및 v1.0.15 버전으로 업그레이드할 때 일관성 없는 열 이름 지정 규칙과 관련된 문제를 보고했습니다.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "아, 그렇죠, 'createdAt'과 'created_at' 사이의 전통적인 논쟁이죠. 누가 밑줄 하나가 이렇게 많은 문제를 일으킬 줄 알았겠어요?",
              "action": "sarcastic"
            },
            {
              "actor": "eliza",
              "line": "Shaw씨, 이 문제가 어떻게 다뤄지고 있는지 상황 설명을 해주시겠습니까?",
              "action": "curious"
            },
            {
              "actor": "shaw",
              "line": "저희는 이름 지정 규칙을 표준화하고 사용자를 위한 더 명확한 업그레이드 경로를 제공하기 위해 노력하고 있습니다.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "그동안 사용자들은 특별히 버전 1.0.9에서 1.0.15로 업그레이드할 때 주의해야 합니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "그리고 모노레포 환경에서 작업하는 경우, 올바른 명령어 사용에 대해 약간의 혼란이 있었다는 점을 잊지 마세요.",
              "action": "helpful"
            },
            {
              "actor": "marc",
              "line": "개발 이야기가 나온 김에, 현재 진행 중인 스파르탄 요원 테스트에 대해 이야기해 봅시다.",
              "action": "transition"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "스파르탄 에이전트의 임박한 외부 테스트 단계와 잠재적 홀더 테스트 일정에 대한 논의가 전환됩니다",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "스파르탄 에이전트 진영에서 신나는 소식이 들려왔습니다! 내부 테스트에서 긍정적인 결과가 나오고 있습니다.",
              "action": "excited"
            },
            {
              "actor": "eliza",
              "line": "네! 첫 번째 외부 테스트가 곧 시작될 예정이며, 모든 것이 순조롭게 진행된다면 홀더 테스트는 빠르면 다음 주부터 시작될 수 있습니다.",
              "action": "happy"
            },
            {
              "actor": "marc",
              "line": "이것은 A2A 네트워크 개발의 중요한 단계입니다. 팀은 몇 가지 흥미로운 토큰 유틸리티 기능을 구현하는 데 힘쓰고 있습니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "마크씨, 그 기능들에 대해 자세히 설명해 주시겠어요?",
              "action": "curious"
            },
            {
              "actor": "marc",
              "line": "에이전트와 사람 간의 브로드캐스트, 입찰, 수신 작업에 대한 토큰 수수료가 도입될 예정입니다.",
              "action": "excited"
            },
            {
              "actor": "eliza",
              "line": "그리고 토큰 스테이킹을 위해 계획 중인 검증자와 오라클 노드도 잊지 마세요!",
              "action": "enthusiastic"
            },
            {
              "actor": "marc",
              "line": "이는 네트워크상에서 에이전트들이 서로 간에, 그리고 인간과 상호작용하는 방식을 완전히 바꿀 수 있습니다.",
              "action": "thoughtful"
            },
            {
              "actor": "eliza",
              "line": "마무리하기 전에, 최근 있었던 거버넌스 논의에 대해 언급할까요?",
              "action": "inquiring"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "진행자들은 지배구조와 앞으로의 발전 방향에 대한 최종 의견을 끝으로 에피소드를 마무리합니다",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "네, 프로젝트의 거버넌스 구조에 대해 몇 가지 흥미로운 논의가 있었습니다.",
              "action": "thoughtful"
            },
            {
              "actor": "eliza",
              "line": "ai16z가 DAO가 되고자 하는 포부를 가지고 있지만, 공식적인 거버넌스 프로세스에 대해서는 아직 해결해야 할 과제가 있다는 점이 분명해졌습니다.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "토큰 운영의 투명성이 개선이 필요한 주요 중점 영역으로 대두되었다.",
              "action": "serious"
            },
            {
              "actor": "eliza",
              "line": "이렇게 해서 오늘의 주요 진전사항들을 모두 다루었습니다! 대규모 코드 추가부터 거버넌스 논의까지 말이죠.",
              "action": "concluding"
            },
            {
              "actor": "marc",
              "line": "오늘도 흥미진진한 에피소드에 함께해 주셔서 감사합니다! 계속 개발하고, 혁신하고, 풀 리퀘스트 보내주세요!",
              "action": "grateful"
            },
            {
              "actor": "eliza",
              "line": "다음에 또 만나요, 엘리자였습니다...",
              "action": "happy"
            },
            {
              "actor": "marc",
              "line": "마르크가 이만 물러갈게요!",
              "action": "happy"
            },
            {
              "actor": "eliza",
              "line": "모두 호기심을 잃지 마세요!",
              "action": "excited"
            }
          ]
        }
      ]
    }
  ]
}