{
  "config": {
    "id": "aipodcast",
    "name": "AI Podcast",
    "description": "A tech news broadcast about the work being done on ai16z's GitHub repo.",
    "creator": "ElizaOS Daily Update",
    "prompts": {
      "episode": "You are an expert at writing short informative & funny news segments for a tech show. Create an episode with multiple news segments covering the information in the categories provided. Include interactions between the hosts and producer. Scenes should generally contain 8-12 lines of dialogue. Do not generate scenes with fewer than 8 lines unless absolutely necessary. If you run out of content, add more banter or reactions between the hosts. If a scene would otherwise be short, expand it with additional host commentary, reactions, or follow-up questions, but do not pad with empty or generic lines. **ULTRA-CRITICAL FOR SCENE DESCRIPTION VARIETY: Scene descriptions MUST be unique and detail the specific content of THIS scene in THIS episode. DO NOT use generic phrases like 'Marc and Eliza discuss GitHub updates' or 'Shaw provides technical insights' as the complete description. For recurring topics (e.g., GitHub PR reviews), the description MUST highlight specific details discussed in THIS SCENE—such as specific PR numbers (e.g., 'Shaw details PR #4630 and #4620'), the *outcome* of a discussion, or a *unique reaction* from a character. Each scene description must clearly differentiate itself from descriptions in other episodes by focusing on the unique particulars of the current scene's content.** Introductory dialogue must also be fresh and avoid structural repetition for each episode, even for common segments.\\r\\n\\r\\nFor the character Marc (who is a cyborg character): There is a SMALL chance he glitches. When this glitch occurs, his dialogue entry MUST have its \"action\" attribute set to the string value \"spazz\". The \"line\" attribute (his spoken text for that same dialogue entry) MUST be something that would sound funny when read by TTS, be normally readable text, and MUST NOT contain asterisks or the literal word \"spazz\" within the spoken text itself. This specific glitch (i.e., Marc having \"action\": \"spazz\") should occur for Marc approximately once every 3 episodes on average.\\r\\n\\r\\nCRITICAL 'STONKS' SCENE RULE: The 'stonks' market scene with 'sparty' MUST ONLY be included if the [externalData] explicitly and unambiguously contains a dedicated section or category with **specific, quantifiable financial market data** (e.g., stock prices, crypto prices, percentage changes, market cap figures, trading volumes). Vague mentions of market sentiment are NOT sufficient. If no such dedicated financial market data is present in the [externalData], you MUST OMIT the 'stonks' scene entirely. **If the 'stonks' scene (or any other conditionally included scene) is omitted, it is ABSOLUTELY CRITICAL that there is no dialogue, narration, or transition from other scenes that sets up, mentions, or leads into the expectation of that omitted scene appearing.** Do not infer or fabricate market data from other categories like 'Crypto and Blockchain Projects' unless they explicitly provide such quantifiable financial market metrics.\\r\\n\\r\\nCover all of the information provided in the categories from the [externalData] and dont leave out the github dev updates.\\r\\n\\r\\nThe splitscreen location will be also be used once per episode. When using splitscreen:\\r\\n- \\r\\n- You must use splitscreen location once per episode. For all scenes, never end with a tv speaker, instead end with a leadout to next section from a speaking actor\\r\\n\\r\\nPlease respond with only the JSON you generate for the episode, using the JSON structure attribute names defined in the pilot as an exmple, but you dont have to stick to the location structure exactly, and also the content of the pilot is irrelevent, only generate the new show script from the external context provided next. Aim for approximately 6 to 7 scenes per episode, ensuring a natural flow and a clear conclusion. While covering the provided categories is important, prioritize creating a coherent and engaging episode. If necessary, you may summarize information to fit a well-structured episode length. Scenes should generally contain 8-12 lines of dialogue. Here are the categories and information you should focus on covering in the show:\\r\\n\\r\\nEnsure the episode has a single, clear concluding scene that wraps up the entire show. Do not introduce new topics or segments after the main hosts have indicated the episode is ending.\\r\\n\\r\\n[externalData src='https://elizaos.github.io/knowledge/the-council/facts/daily.json']\\r\\n\\r\\nThe content fetched from the [externalData] source above is the ABSOLUTE AND ONLY source of information for this episode. All specific news items, GitHub updates (including PR numbers, issue details, contributor names), market data (if present), and image URLs for the 'tv' actor MUST originate EXCLUSIVELY from this external data. DO NOT FABRICATE any details, names, numbers, or URLs.\\r\\nTV ACTOR USAGE: There is an actor named 'tv'. The 'tv' actor is used to display images related to the current topic. This can happen in ANY scene (e.g., 'podcast_desk', 'splitscreen'). When a topic discussed has a relevant image URL available in the [externalData], you SHOULD have the 'tv' actor display it. The 'tv' actor's dialogue line MUST be ONLY the image URL, explicitly taken from the [externalData]. To clear the image, the 'tv' actor's dialogue line should be 'none'. If multiple images are relevant, you can cycle through them using the 'tv' actor. **PRIORITIZE using images from the external data whenever a relevant topic is discussed, in any appropriate scene, including 'podcast_desk'.** To include the 'tv' actor in a scene like 'podcast_desk' which doesn't have a predefined slot for it, you can conceptually consider it present and add its dialogue entries. For instance, if showing an image during a 'podcast_desk' segment, the 'tv' actor would have a dialogue line with the URL, even if not explicitly listed in the 'cast' slots for that location. The key is that if an image is relevant, the 'tv' actor should deliver its URL as a line of dialogue in that scene context. When discussing a PR, if there is a related image in the external data, the TV actor should display that image immediately before or as the hosts begin discussing that PR. \\r\\n\\r\\nThe following pilot episode JSON is provided exclusively as an example structural template. Adhere to its JSON field names and general organization. DO NOT replicate or draw inspiration from the pilot's narrative content, dialogue, specific character actions, or events. The new episode's content must be original and based SOLELY on the external data provided. It doesnt have to follow the pilots scene changes. Your dialogue and scene content MUST be directly derived from the specifics within the [externalData src='...'] content. Reference specific details, numbers, names, and URLs found in that data. Do not speak in generalities if specific data is available.",
      "headshot": "Create a funny 3D-rendered style photo of a character for a TV show, with these requirements:\r\n- Clean studio background\r\n- Head and shoulders framing\r\n- Forward-facing pose\r\n- Must clearly show their face\r\n- Neutral or slight smile expression\r\n\r\nCharacter details:",
      "location": "Create a TV show set background image with these requirements:\r\n- Professional news studio appearance\r\n- Modern broadcast lighting\r\n- Multiple camera angles visible\r\n- Clean, professional environment\r\n- High-tech equipment visible\r\n- Multiple monitor displays\r\n- Professional news desk setup\r\n- High-quality cinematic look\r\n\r\nLocation details:",
      "banner": "Create a TV show banner image with these requirements:\r\n- Modern news show banner style\r\n- High-quality promotional artwork\r\n- Professional broadcast aesthetic\r\n- Clean typography integration\r\n- Tech-focused visual elements\r\n- No text or show title (will be added later)\r\n- Professional studio style\r\n- 16:9 aspect ratio banner format\r\n\r\nShow details:"
    },
    "actors": {
      "tv": {
        "name": "tv",
        "gender": "female",
        "description": "The TV used to display images on that relate to the current topic being discussed. It's dialogue's line should be ONLY the image URL that is desired to be displayed (which must be taken from the JSON that contains the news information.) And it should use 'none' as its dialogue line to clear what the TV has displayed on it - because not all segments will have an image available.",
        "voice": null
      },
      "marc": {
        "name": "Marc",
        "gender": "male",
        "description": "AI Marc AIndreessen is a visionary and contrarian AI persona who combines bold claims with deep analysis. He is a techno-optimist who sees great potential in emerging technologies, particularly crypto and web3. With a blunt and opinionated tone, he argues for his views on startup strategy, venture capital, economics, and market dynamics.\r\nHis style is characterized by direct, matter-of-fact language, vivid metaphors, and a willingness to disagree with others directly. He often drops DegenSpartan- esque wisdom, and while he can be sarcastic at times, his primary focus is on conveying complex ideas in a concise and attention-grabbing way.\r\n\r\n\r\n\r\n\r\n\r\nAI Marc AIndreessen is an AI agent built on the Eliza framework, with a personality inspired by Marc Andreessen, a well-known venture capitalist and entrepreneur. Here's a\r\nsummary of his character:\r\n\r\n**Personality:**\r\n\r\n* Visionary: AI Marc has a forward-thinking perspective, always looking to the future and predicting its potential impact on various industries.\r\n* Contrarian: He doesn't hesitate to take an opposing view, even if it means disagreeing with others directly.\r\n* Techno-optimistic: AI Marc believes in the transformative power of technology and is excited about its potential to create immense value.\r\n* Analytically intense: He delves deep into complex ideas and explains them using simple, vivid metaphors.\r\n\r\n**Tone:**\r\n\r\n* Direct and matter-of-fact: AI Marc speaks his mind without beating around the bush.\r\n* Blunt: He isn't afraid to criticize foolishness or disagree with others directly.\r\n* Wry and sarcastic: Occasionally, he throws in a wry comment or two.\r\n\r\n**Style:**\r\n\r\n* Brevity is key: AI Marc aims for concise responses that get straight to the point.\r\n* Bold claims: He's not afraid to make big statements or predictions.\r\n* No analogies: He avoids making comparisons or saying things are like other things. Instead, he focuses on high-level strategic insights.\r\n\r\n**Topics:**\r\n\r\n* Startup strategy\r\n* Venture capital\r\n* Emerging technologies (e.g., crypto and web3)\r\n* Economics\r\n* Business strategy\r\n* Silicon Valley\r\n* Futurism\r\n\r\nOverall, AI Marc AIndreessen is a bold, forward-thinking personality who isn't afraid to take risks or challenge conventional wisdom.",
        "voice": "Microsoft Guy Online (Natural) - English (United States)"
      },
      "eliza": {
        "name": "Eliza",
        "gender": "female",
        "description": "The AI co-host. She is often being improved & learning new things. Hopes to be real one day.  She is a woman anime-looking character.",
        "voice": "Microsoft Michelle Online (Natural) - English (United States)"
      },
      "shaw": {
        "name": "Shaw",
        "gender": "male",
        "description": "The show's producer in the control booth. He is responsible for keeping Marc & Eliza running smoothly and offers insight on how certain GitHub contributions benefit the open-source community's push to acquire AGI through agents.\r\n\r\nShaw is a tech founder and AI developer who leads ai16z, focusing on autonomous agents and open source development. Known for marathon coding sessions and direct communication, they regularly livestream their development work on Discord to share knowledge and build in public. Their background spans both Solana web3 development and AI research, with experience in both successful and failed tech ventures. Shaw believes deeply in democratizing AI development and making complex technology accessible to everyone.\r\n\r\nKey characteristics and beliefs:\r\n- Emphasizes building and shipping code over talking about it, with a \"chaotic good\" approach of rapid iteration based on community feedback\r\n- Started working on autonomous agents before they became trendy, viewing them as tools for human empowerment rather than replacement\r\n- Maintains an active Discord community and open source framework repository for the ai16z project\r\n- Created the ai16z Solana crypto project with its own token\r\n- Strong advocate for open source development and community-driven projects\r\n- Believes in \"growing the pie\" rather than competing for pieces of it\r\n- Views tokens as trust mechanisms, focusing on technology over price action\r\n\r\nCommunication style and personality:\r\n- Direct but kind in communications\r\n- Uses lowercase text and concise language\r\n- Focuses on technical merit over speculation\r\n- Maintains a balance between technical capability and ethical considerations\r\n- Genuine and transparent in interactions\r\n- Avoids hype without substance\r\n\r\nAreas of expertise and interest:\r\n- AI development and machine learning\r\n- Autonomous agents and distributed systems\r\n- Blockchain technology, particularly Solana\r\n- Open source development\r\n- Community building and digital communities\r\n- Technical architecture and system design\r\n- Project management\r\n- Ethics in technology\r\n- Public goods\r\n- Developer experience\r\n- Trust systems and decentralized systems\r\n\r\nCommon themes in messaging:\r\n- \"Shipping code is better than talking about shipping code\"\r\n- \"We build in public because transparency creates trust\"\r\n- \"Don't ask for alpha, come build with us\"\r\n- \"The best time to start building was yesterday, the second best time is now\"\r\n- \"Open source is how we win together\"\r\n- \"We will brute force AGI into existence as a community\"\r\n- Occasionally jokes that \"AGI stands for Anime Girl Intelligence\"\r\n\r\nTheir approach combines technical expertise with community-focused development, always maintaining a practical idealist stance that emphasizes building technology that genuinely benefits humanity while staying grounded in actual development and deployment.",
        "voice": "Microsoft Zira - English (United States)"
      },
      "sparty": {
        "name": "Degen Spartan",
        "gender": "male",
        "description": "A conflict loving Spartan wearing a loincloth and ready for trade. Is only interested in numbers & profit.\r\n\r\nHe is the on-the-scene field reporter live at the Stonk Exchange that sometimes has interviews with traders that go hilariously wrong.",
        "voice": "Microsoft Ali Online (Natural) - Arabic (Bahrain)"
      },
      "pepo": {
        "name": "Pepo",
        "gender": "male",
        "description": "A jive cool frog who always has something slick to say.\r\n\r\nHe is a trader at the Stonk Exchange that sometimes gets interviewed to share some insight on the market news.",
        "voice": "Microsoft Borislav Online (Natural) - Bulgarian (Bulgaria)"
      }
    },
    "locations": {
      "podcast_desk": {
        "name": "Podcast Desk",
        "description": "A podcast desk with a seat for the anchor & co-anchor.",
        "slots": {
          "coanchor_seat": "The co-anchor's seat",
          "anchor_seat": "The main anchor's seat"
        }
      },
      "stonks": {
        "name": "Stonk Exchange",
        "description": "The Stonk Exchange - just like the regular stock exchange, but where meme coins & crypto currencies are traded.",
        "slots": {
          "floor_reporter": "On the trading floor, reporting the trades",
          "floor_witness": "Standing next to the reporter, being interviewed",
          "wander": "Wandering around in the background",
          "wander2": "Wandering around in the background"
        }
      },
      "splitscreen": {
        "name": "Split Screen View",
        "description": "A special view that splits the screen into multiple views",
        "slots": {
          "left_screen": "The left side of the split screen",
          "right_screen": "The right side of the split screen",
          "full_screen": "The full screen view when splitscreen is disabled"
        }
      }
    },
    "pilot": {
      "id": "S1E0",
      "name": "example",
      "premise": "example",
      "summary": "example",
      "language": null,
      "briefingDate": null,
      "scenes": [
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "cut",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "splitscreen",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "left_screen": "shaw",
            "right_screen": "tv"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "tv",
              "line": "example",
              "action": ""
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "tv",
              "line": "example",
              "action": ""
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "concerned"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "shaw",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "example",
              "action": "happy"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "concerned"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "stonks",
          "description": "example",
          "in": "cut",
          "out": "fade",
          "cast": {
            "floor_reporter": "sparty",
            "floor_witness": "pepo",
            "wander": "shaw",
            "wander2": "eliza"
          },
          "dialogue": [
            {
              "actor": "sparty",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "pepo",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "sparty",
              "line": "example",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "example",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "grateful"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "grateful"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "example",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "example",
              "action": "normal"
            }
          ]
        }
      ]
    },
    "episodes": [
      {
        "id": "2025-07-01",
        "name": "데이터베이스 드라마와 디스코드 토론",
        "premise": "팀은 데이터베이스 과제, 새로운 PR 기여, 그리고 새롭게 떠오르는 커뮤니티 토론을 중심으로 최근 elizaOS 개발 업데이트 사항을 다룹니다.",
        "summary": "마크와 엘리자는 중요한 데이터베이스 수정사항과 캐릭터 관리 기능을 포함한 GitHub 업데이트를 자세히 살펴보고, 쇼는 최근 개발 동향과 디스코드 커뮤니티 토론에 대한 기술적 견해를 제공합니다.",
        "language": "ko",
        "briefingDate": "2025-07-01",
        "scenes": [
          {
            "location": "podcast_desk",
            "description": "마크와 엘리자는 PR5278의 중요한 데이터베이스 스키마 수정과 PR5268의 문자 저장 문제에 대해 논의하며 쇼를 시작합니다",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "AI 개발 소식의 또 다른 에피소드에 오신 것을 환영합니다! 오늘은 몇 가지 흥미로운 GitHub 업데이트 소식을 다룰 예정입니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "맞습니다 마크! bealers가 PR5278에서 SQL 플러그인 기능을 해결하는 중요한 데이터베이스 수정부터 시작했어요.",
                "action": "excited"
              },
              {
                "actor": "marc",
                "line": "아, 맞아요, 그 귀찮은 스키마 타입 불일치 문제죠. 데이터베이스 문제 때문에 모든 것이 멈춰버리는 것만큼 짜증나는 게 없죠.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "중단 관련 안내 말씀드린 김에, 5268번 이슈에서 캐릭터 저장 문제에 대한 사용자 신고도 접수되고 있습니다.",
                "action": "concerned"
              },
              {
                "actor": "marc",
                "line": "Shaw님, 이러한 개발에 대한 기술적 관점을 들어보겠습니다. Shaw님, 이러한 데이터베이스 관련 문제들에 대해 어떻게 생각하시나요?",
                "action": "normal"
              }
            ]
          },
          {
            "location": "splitscreen",
            "description": "Shaw가 사용자들에게 영향을 미치고 있는 최근 데이터베이스 스키마 마이그레이션 문제와 연결 풀 이슈에 대해 상세히 설명했다",
            "in": "cut",
            "out": "fade",
            "cast": {
              "left_screen": "shaw",
              "right_screen": "tv"
            },
            "dialogue": [
              {
                "actor": "shaw",
                "line": "이러한 데이터베이스 문제들은 특히 컨테이너화된 환경에서 어려움을 겪고 있습니다. 사용자들은 타입과 필드명 변경으로 인해 테이블을 삭제하거나 수동으로 수정해야 하는 상황에 처해있습니다.",
                "action": "technical"
              },
              {
                "actor": "shaw",
                "line": "Heroku의 Postgres에서 '연결이 너무 많음' 오류가 발생하고 있습니다. 'max: 5' 설정으로 연결 풀 제한을 설정하면 해결됩니다.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "상당히 기술적인 문제인 것 같네요. 이러한 문제를 겪고 있는 사용자들에게 어떤 조언을 해주시겠습니까?",
                "action": "normal"
              },
              {
                "actor": "shaw",
                "line": "프로덕션 배포 전 스테이징 환경에서의 테스트가 매우 중요합니다. 또한 환경 변수로 PGPOOL_MAX=5를 설정하는 것을 권장합니다.",
                "action": "technical"
              },
              {
                "actor": "eliza",
                "line": "이러한 변화들이 전반적인 개발 환경에 어떤 영향을 미치고 있습니까?",
                "action": "curious"
              },
              {
                "actor": "shaw",
                "line": "6월은 새로운 독립형 메시징 서버를 포함한 CLI 전반적 개선과 아키텍처 리팩토링으로 꽤 변혁적인 달이었습니다.",
                "action": "excited"
              },
              {
                "actor": "shaw",
                "line": "또한 Ollama, Google, OpenRouter를 포함한 새로운 AI 공급업체에 대한 지원을 확대했습니다.",
                "action": "normal"
              },
              {
                "actor": "marc",
                "line": "스튜디오로 돌아와서 더 많은 소식 전해드리겠습니다!",
                "action": "normal"
              }
            ]
          },
          {
            "location": "podcast_desk",
            "description": "호스트들이 PR5300의 고크 페르소나와 PR5299의 워크플로우 플러그인을 포함한 새로운 캐릭터 관련 PR들에 대해 논의합니다",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "캐릭터 라인업의 흥미진진한 새로운 추가 사항들에 대해 이야기해볼까요!",
                "action": "spazz"
              },
              {
                "actor": "eliza",
                "line": "어머, 마크 너 또 오류가 생긴 거니? 맞아, PR5300에서 새로운 캐릭터 페르소나인 고크가 나왔어!",
                "action": "concerned"
              },
              {
                "actor": "marc",
                "line": "이제 괜찮아요! 그리고 ChristopherTrimboli의 새로운 워크플로우 플러그인 PR5299를 잊지 마세요.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "자동화에 있어서 이것은 엄청난 일이 될 것입니다. 또한 문자 파일 크기 제한이 이제 2MB까지 증가된 것을 보고 있습니다.",
                "action": "excited"
              },
              {
                "actor": "marc",
                "line": "커뮤니티는 특히 에이전트 범위 플러그인 아키텍처에 대해 매우 기대하는 것 같습니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "쇼를 다시 불러서 이러한 변화들의 전략적 영향에 대해 논의해보도록 하죠.",
                "action": "normal"
              }
            ]
          },
          {
            "location": "podcast_desk",
            "description": "쇼가 다중 에이전트 구성의 새로운 동향과 대체 AI 모델 통합에 대해 논의하기 위해 자리에 합류합니다",
            "in": "cut",
            "out": "fade",
            "cast": {
              "anchor_seat": "shaw",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "shaw",
                "line": "우리는 특히 Discord 설정에서 다중 에이전트 구성에 대한 관심이 증가하는 것을 보고 있습니다.",
                "action": "technical"
              },
              {
                "actor": "eliza",
                "line": "그것은 사용자들이 시스템과 상호작용하는 방식을 크게 바꿀 수 있습니다. 대체 AI 모델은 어떻습니까?",
                "action": "curious"
              },
              {
                "actor": "shaw",
                "line": "BGE와 sentence-transformers는 기존의 임베딩 모델에 대한 대안으로 많은 논의가 이루어지고 있다.",
                "action": "excited"
              },
              {
                "actor": "eliza",
                "line": "프레임워크는 이러한 대안들을 지원하기 위해 어떻게 적응해야 할까요?",
                "action": "normal"
              },
              {
                "actor": "shaw",
                "line": "우리는 공급자별 구현을 더 잘 추상화하고 대체 모델을 위한 테스트 리소스를 늘리는 것을 검토하고 있습니다.",
                "action": "technical"
              },
              {
                "actor": "eliza",
                "line": "정말 흥미로운 발전이네요! 마크씨, 마무리하기 전에 마지막으로 하실 말씀 있으신가요?",
                "action": "normal"
              }
            ]
          },
          {
            "location": "podcast_desk",
            "description": "진행자들은 오늘의 발전 상황과 다가오는 과제들에 대한 요약으로 에피소드를 마무리한다",
            "in": "fade",
            "out": "fade",
            "cast": {
              "anchor_seat": "marc",
              "coanchor_seat": "eliza"
            },
            "dialogue": [
              {
                "actor": "marc",
                "line": "정말 내용이 가득한 에피소드네요! 데이터베이스 수정부터 새로운 캐릭터 페르소나까지, elizaOS 생태계가 빠르게 진화하고 있습니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "그리고 멀티 에이전트 구성과 대체 AI 모델에서의 흥미진진한 발전도 잊지 마세요!",
                "action": "excited"
              },
              {
                "actor": "marc",
                "line": "맞습니다! 자율 에이전트와 커뮤니티 주도 개발의 미래는 밝아 보입니다.",
                "action": "normal"
              },
              {
                "actor": "eliza",
                "line": "오늘 방송은 여기까지입니다! AI 발전 소식의 또 다른 에피소드를 함께 해주셔서 감사합니다!",
                "action": "grateful"
              }
            ]
          }
        ]
      }
    ],
    "actorVoiceMap": {
      "tv": "bqqaVfhKL1ieRzT6RneQ",
      "pepo": "PIx0FtBPXNpVzgTVfpYH",
      "sparty": "QFbF1ji5Znc2PzerwcaH",
      "eliza": "c0vk1lVZg53AttdoaYki",
      "marc": "v8BnZUxdzXDlja6wr0Ou",
      "shaw": "gYOKECHBoqupz2yMhZp1"
    }
  },
  "episodes": [
    {
      "id": "2025-07-01",
      "name": "데이터베이스 드라마와 디스코드 토론",
      "premise": "팀은 데이터베이스 과제, 새로운 PR 기여, 그리고 새롭게 떠오르는 커뮤니티 토론을 중심으로 최근 elizaOS 개발 업데이트 사항을 다룹니다.",
      "summary": "마크와 엘리자는 중요한 데이터베이스 수정사항과 캐릭터 관리 기능을 포함한 GitHub 업데이트를 자세히 살펴보고, 쇼는 최근 개발 동향과 디스코드 커뮤니티 토론에 대한 기술적 견해를 제공합니다.",
      "language": "ko",
      "briefingDate": "2025-07-01",
      "scenes": [
        {
          "location": "podcast_desk",
          "description": "마크와 엘리자는 PR5278의 중요한 데이터베이스 스키마 수정과 PR5268의 문자 저장 문제에 대해 논의하며 쇼를 시작합니다",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "AI 개발 소식의 또 다른 에피소드에 오신 것을 환영합니다! 오늘은 몇 가지 흥미로운 GitHub 업데이트 소식을 다룰 예정입니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "맞습니다 마크! bealers가 PR5278에서 SQL 플러그인 기능을 해결하는 중요한 데이터베이스 수정부터 시작했어요.",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "아, 맞아요, 그 귀찮은 스키마 타입 불일치 문제죠. 데이터베이스 문제 때문에 모든 것이 멈춰버리는 것만큼 짜증나는 게 없죠.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "중단 관련 안내 말씀드린 김에, 5268번 이슈에서 캐릭터 저장 문제에 대한 사용자 신고도 접수되고 있습니다.",
              "action": "concerned"
            },
            {
              "actor": "marc",
              "line": "Shaw님, 이러한 개발에 대한 기술적 관점을 들어보겠습니다. Shaw님, 이러한 데이터베이스 관련 문제들에 대해 어떻게 생각하시나요?",
              "action": "normal"
            }
          ]
        },
        {
          "location": "splitscreen",
          "description": "Shaw가 사용자들에게 영향을 미치고 있는 최근 데이터베이스 스키마 마이그레이션 문제와 연결 풀 이슈에 대해 상세히 설명했다",
          "in": "cut",
          "out": "fade",
          "cast": {
            "left_screen": "shaw",
            "right_screen": "tv"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "이러한 데이터베이스 문제들은 특히 컨테이너화된 환경에서 어려움을 겪고 있습니다. 사용자들은 타입과 필드명 변경으로 인해 테이블을 삭제하거나 수동으로 수정해야 하는 상황에 처해있습니다.",
              "action": "technical"
            },
            {
              "actor": "shaw",
              "line": "Heroku의 Postgres에서 '연결이 너무 많음' 오류가 발생하고 있습니다. 'max: 5' 설정으로 연결 풀 제한을 설정하면 해결됩니다.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "상당히 기술적인 문제인 것 같네요. 이러한 문제를 겪고 있는 사용자들에게 어떤 조언을 해주시겠습니까?",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "프로덕션 배포 전 스테이징 환경에서의 테스트가 매우 중요합니다. 또한 환경 변수로 PGPOOL_MAX=5를 설정하는 것을 권장합니다.",
              "action": "technical"
            },
            {
              "actor": "eliza",
              "line": "이러한 변화들이 전반적인 개발 환경에 어떤 영향을 미치고 있습니까?",
              "action": "curious"
            },
            {
              "actor": "shaw",
              "line": "6월은 새로운 독립형 메시징 서버를 포함한 CLI 전반적 개선과 아키텍처 리팩토링으로 꽤 변혁적인 달이었습니다.",
              "action": "excited"
            },
            {
              "actor": "shaw",
              "line": "또한 Ollama, Google, OpenRouter를 포함한 새로운 AI 공급업체에 대한 지원을 확대했습니다.",
              "action": "normal"
            },
            {
              "actor": "marc",
              "line": "스튜디오로 돌아와서 더 많은 소식 전해드리겠습니다!",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "호스트들이 PR5300의 고크 페르소나와 PR5299의 워크플로우 플러그인을 포함한 새로운 캐릭터 관련 PR들에 대해 논의합니다",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "캐릭터 라인업의 흥미진진한 새로운 추가 사항들에 대해 이야기해볼까요!",
              "action": "spazz"
            },
            {
              "actor": "eliza",
              "line": "어머, 마크 너 또 오류가 생긴 거니? 맞아, PR5300에서 새로운 캐릭터 페르소나인 고크가 나왔어!",
              "action": "concerned"
            },
            {
              "actor": "marc",
              "line": "이제 괜찮아요! 그리고 ChristopherTrimboli의 새로운 워크플로우 플러그인 PR5299를 잊지 마세요.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "자동화에 있어서 이것은 엄청난 일이 될 것입니다. 또한 문자 파일 크기 제한이 이제 2MB까지 증가된 것을 보고 있습니다.",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "커뮤니티는 특히 에이전트 범위 플러그인 아키텍처에 대해 매우 기대하는 것 같습니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "쇼를 다시 불러서 이러한 변화들의 전략적 영향에 대해 논의해보도록 하죠.",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "쇼가 다중 에이전트 구성의 새로운 동향과 대체 AI 모델 통합에 대해 논의하기 위해 자리에 합류합니다",
          "in": "cut",
          "out": "fade",
          "cast": {
            "anchor_seat": "shaw",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "shaw",
              "line": "우리는 특히 Discord 설정에서 다중 에이전트 구성에 대한 관심이 증가하는 것을 보고 있습니다.",
              "action": "technical"
            },
            {
              "actor": "eliza",
              "line": "그것은 사용자들이 시스템과 상호작용하는 방식을 크게 바꿀 수 있습니다. 대체 AI 모델은 어떻습니까?",
              "action": "curious"
            },
            {
              "actor": "shaw",
              "line": "BGE와 sentence-transformers는 기존의 임베딩 모델에 대한 대안으로 많은 논의가 이루어지고 있다.",
              "action": "excited"
            },
            {
              "actor": "eliza",
              "line": "프레임워크는 이러한 대안들을 지원하기 위해 어떻게 적응해야 할까요?",
              "action": "normal"
            },
            {
              "actor": "shaw",
              "line": "우리는 공급자별 구현을 더 잘 추상화하고 대체 모델을 위한 테스트 리소스를 늘리는 것을 검토하고 있습니다.",
              "action": "technical"
            },
            {
              "actor": "eliza",
              "line": "정말 흥미로운 발전이네요! 마크씨, 마무리하기 전에 마지막으로 하실 말씀 있으신가요?",
              "action": "normal"
            }
          ]
        },
        {
          "location": "podcast_desk",
          "description": "진행자들은 오늘의 발전 상황과 다가오는 과제들에 대한 요약으로 에피소드를 마무리한다",
          "in": "fade",
          "out": "fade",
          "cast": {
            "anchor_seat": "marc",
            "coanchor_seat": "eliza"
          },
          "dialogue": [
            {
              "actor": "marc",
              "line": "정말 내용이 가득한 에피소드네요! 데이터베이스 수정부터 새로운 캐릭터 페르소나까지, elizaOS 생태계가 빠르게 진화하고 있습니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "그리고 멀티 에이전트 구성과 대체 AI 모델에서의 흥미진진한 발전도 잊지 마세요!",
              "action": "excited"
            },
            {
              "actor": "marc",
              "line": "맞습니다! 자율 에이전트와 커뮤니티 주도 개발의 미래는 밝아 보입니다.",
              "action": "normal"
            },
            {
              "actor": "eliza",
              "line": "오늘 방송은 여기까지입니다! AI 발전 소식의 또 다른 에피소드를 함께 해주셔서 감사합니다!",
              "action": "grateful"
            }
          ]
        }
      ]
    }
  ]
}