name: Daily AI News Episode Upload

on:
  schedule:
    # Run daily at 05:00 UTC
    - cron: '0 5 * * *'
  workflow_dispatch:  # Allow manual triggering
    inputs:
      episode_date:
        description: 'Episode date (YYYY-MM-DD)'
        required: true
        type: string

env:
  REMOTE_HOST: 'clanktank.tv'
  REMOTE_USER: 'uploader'

jobs:
  upload-episode:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Set up SSH known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ env.REMOTE_HOST }} >> ~/.ssh/known_hosts
        
    - name: Determine episode date
      id: date
      run: |
        if [ "${{ github.event.inputs.episode_date }}" != "" ]; then
          echo "episode_date=${{ github.event.inputs.episode_date }}" >> $GITHUB_OUTPUT
        else
          echo "episode_date=$(date -d 'yesterday' '+%Y-%m-%d')" >> $GITHUB_OUTPUT
        fi
        
    - name: Process episode and update repository
      run: |
        EPISODE_DATE="${{ steps.date.outputs.episode_date }}"
        echo "${{ secrets.VPS_SSH_KEY }}" | ssh -i /dev/stdin -o StrictHostKeyChecking=yes ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }} \
          "~/scripts/server/process_episode.sh '$EPISODE_DATE' && ~/scripts/server/update_website.sh '$EPISODE_DATE'"
        
    - name: Pull updated files from server
      run: |
        EPISODE_DATE="${{ steps.date.outputs.episode_date }}"
        
        # Download updated files
        echo "${{ secrets.VPS_SSH_KEY }}" | scp -i /dev/stdin ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }}:~/ai-news-website/episodes.json ./
        
        # Optional: Also update index.html if it exists
        if echo "${{ secrets.VPS_SSH_KEY }}" | ssh -i /dev/stdin ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }} "test -f ~/ai-news-website/index.html"; then
          echo "${{ secrets.VPS_SSH_KEY }}" | scp -i /dev/stdin ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }}:~/ai-news-website/index.html ./
        fi
        
        # Commit and push changes
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add episodes.json index.html
        
        if ! git diff --cached --quiet; then
          git commit -m "automated update site"
          git push
        fi
